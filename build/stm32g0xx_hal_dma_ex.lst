ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g0xx_hal_dma_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.CHANNEL_OFFSET_TAB,"a"
  18              		.align	2
  21              	CHANNEL_OFFSET_TAB:
  22 0000 081C3044 		.ascii	"\010\0340DXl\200"
  22      586C80
  23              		.section	.text.HAL_DMAEx_ConfigMuxSync,"ax",%progbits
  24              		.align	1
  25              		.global	HAL_DMAEx_ConfigMuxSync
  26              		.syntax unified
  27              		.code	16
  28              		.thumb_func
  30              	HAL_DMAEx_ConfigMuxSync:
  31              	.LFB363:
  32              		.file 1 "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c"
   1:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @file    stm32g0xx_hal_dma_ex.c
   4:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief   DMA Extension HAL module driver
   6:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *         This file provides firmware functions to manage the following
   7:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *         functionalities of the DMA Extension peripheral:
   8:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *           + Extended features functions
   9:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *
  10:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   @verbatim
  11:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   ==============================================================================
  12:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                         ##### How to use this driver #####
  13:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   ==============================================================================
  14:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   [..]
  15:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   The DMA Extension HAL driver can be used as follows:
  16:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****    (+) Configure the DMAMUX Synchronization Block using HAL_DMAEx_ConfigMuxSync function.
  17:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****    (+) Configure the DMAMUX Request Generator Block using HAL_DMAEx_ConfigMuxRequestGenerator funct
  18:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        Functions HAL_DMAEx_EnableMuxRequestGenerator and HAL_DMAEx_DisableMuxRequestGenerator can t
  19:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        to respectively enable/disable the request generator.
  20:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  21:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****    (+) To handle the DMAMUX Interrupts, the function  HAL_DMAEx_MUX_IRQHandler should be called fro
  22:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        the DMAMUX IRQ handler i.e DMAMUX1_OVR_IRQHandler.
  23:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        As only one interrupt line is available for all DMAMUX channels and request generators , HAL
  24:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        called with, as parameter, the appropriate DMA handle as many as used DMAs in the user proje
  25:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       (exception done if a given DMA is not using the DMAMUX SYNC block neither a request generator
  26:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  27:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   @endverbatim
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s 			page 2


  28:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   ******************************************************************************
  29:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @attention
  30:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *
  31:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * Copyright (c) 2018 STMicroelectronics.
  32:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * All rights reserved.
  33:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *
  34:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  35:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * in the root directory of this software component.
  36:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  37:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *
  38:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   ******************************************************************************
  39:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
  40:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  41:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Includes ------------------------------------------------------------------*/
  42:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** #include "stm32g0xx_hal.h"
  43:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  44:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /** @addtogroup STM32G0xx_HAL_Driver
  45:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @{
  46:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
  47:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  48:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /** @defgroup DMAEx DMAEx
  49:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief DMA Extended HAL module driver
  50:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @{
  51:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
  52:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  53:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** #ifdef HAL_DMA_MODULE_ENABLED
  54:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  55:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private typedef -----------------------------------------------------------*/
  56:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private define ------------------------------------------------------------*/
  57:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private macro -------------------------------------------------------------*/
  58:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private Constants ---------------------------------------------------------*/
  60:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Private function prototypes -----------------------------------------------*/
  61:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /* Exported functions --------------------------------------------------------*/
  62:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  63:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  64:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /** @defgroup DMAEx_Exported_Functions DMAEx Exported Functions
  65:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @{
  66:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
  67:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  68:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /** @defgroup DMAEx_Exported_Functions_Group1 DMAEx Extended features functions
  69:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *  @brief   Extended features functions
  70:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *
  71:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** @verbatim
  72:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****  ===============================================================================
  73:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                 #####  Extended features functions  #####
  74:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****  ===============================================================================
  75:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     [..]  This section provides functions allowing to:
  76:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  77:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     (+) Configure the DMAMUX Synchronization Block using HAL_DMAEx_ConfigMuxSync function.
  78:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     (+) Configure the DMAMUX Request Generator Block using HAL_DMAEx_ConfigMuxRequestGenerator func
  79:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        Functions HAL_DMAEx_EnableMuxRequestGenerator and HAL_DMAEx_DisableMuxRequestGenerator can t
  80:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****        to respectively enable/disable the request generator.
  81:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     (+) Handle DMAMUX interrupts using HAL_DMAEx_MUX_IRQHandler : should be called from
  82:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****         the DMAMUX IRQ handler
  83:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  84:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** @endverbatim
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s 			page 3


  85:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @{
  86:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
  87:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
  88:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /**
  89:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief Configure the DMAMUX synchronization parameters for a given DMA channel (instance).
  90:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
  91:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *             the configuration information for the specified DMA channel.
  92:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param pSyncConfig Pointer to HAL_DMA_MuxSyncConfigTypeDef contains the DMAMUX synchronization 
  93:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @retval HAL status
  94:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
  95:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** HAL_StatusTypeDef HAL_DMAEx_ConfigMuxSync(DMA_HandleTypeDef *hdma, HAL_DMA_MuxSyncConfigTypeDef *pS
  96:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** {
  33              		.loc 1 96 1
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 82B0     		sub	sp, sp, #8
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 16
  45 0004 00AF     		add	r7, sp, #0
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 7
  48 0006 7860     		str	r0, [r7, #4]
  49 0008 3960     		str	r1, [r7]
  97:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* Check the parameters */
  98:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
  99:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_SYNC_SIGNAL_ID(pSyncConfig->SyncSignalID));
 101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_SYNC_POLARITY(pSyncConfig-> SyncPolarity));
 103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_SYNC_STATE(pSyncConfig->SyncEnable));
 104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_SYNC_EVENT(pSyncConfig->EventEnable));
 105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_SYNC_REQUEST_NUMBER(pSyncConfig->RequestNumber));
 106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /*Check if the DMA state is ready */
 108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   if (hdma->State == HAL_DMA_STATE_READY)
  50              		.loc 1 108 11
  51 000a 7B68     		ldr	r3, [r7, #4]
  52 000c 2522     		movs	r2, #37
  53 000e 9B5C     		ldrb	r3, [r3, r2]
  54 0010 DBB2     		uxtb	r3, r3
  55              		.loc 1 108 6
  56 0012 012B     		cmp	r3, #1
  57 0014 2CD1     		bne	.L2
 109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Process Locked */
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     __HAL_LOCK(hdma);
  58              		.loc 1 111 5
  59 0016 7B68     		ldr	r3, [r7, #4]
  60 0018 2422     		movs	r2, #36
  61 001a 9B5C     		ldrb	r3, [r3, r2]
  62 001c 012B     		cmp	r3, #1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s 			page 4


  63 001e 01D1     		bne	.L3
  64              		.loc 1 111 5 is_stmt 0 discriminator 1
  65 0020 0223     		movs	r3, #2
  66 0022 29E0     		b	.L4
  67              	.L3:
  68              		.loc 1 111 5 discriminator 2
  69 0024 7B68     		ldr	r3, [r7, #4]
  70 0026 2422     		movs	r2, #36
  71 0028 0121     		movs	r1, #1
  72 002a 9954     		strb	r1, [r3, r2]
 112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Set the new synchronization parameters (and keep the request ID filled during the Init)*/
 114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     MODIFY_REG(hdma->DMAmuxChannel->CCR, \
  73              		.loc 1 114 5 is_stmt 1 discriminator 2
  74 002c 7B68     		ldr	r3, [r7, #4]
  75 002e 9B6C     		ldr	r3, [r3, #72]
  76 0030 1B68     		ldr	r3, [r3]
  77 0032 7F22     		movs	r2, #127
  78 0034 1340     		ands	r3, r2
  79 0036 1900     		movs	r1, r3
  80 0038 3B68     		ldr	r3, [r7]
  81 003a 1A68     		ldr	r2, [r3]
  82 003c 3B68     		ldr	r3, [r7]
  83 003e DB68     		ldr	r3, [r3, #12]
  84 0040 013B     		subs	r3, r3, #1
  85 0042 DB04     		lsls	r3, r3, #19
  86 0044 1A43     		orrs	r2, r3
  87 0046 3B68     		ldr	r3, [r7]
  88 0048 5B68     		ldr	r3, [r3, #4]
  89 004a 1A43     		orrs	r2, r3
  90 004c 3B68     		ldr	r3, [r7]
  91 004e 1B7A     		ldrb	r3, [r3, #8]
  92 0050 1B04     		lsls	r3, r3, #16
  93 0052 1A43     		orrs	r2, r3
  94 0054 3B68     		ldr	r3, [r7]
  95 0056 5B7A     		ldrb	r3, [r3, #9]
  96 0058 5B02     		lsls	r3, r3, #9
  97 005a 1A43     		orrs	r2, r3
  98 005c 7B68     		ldr	r3, [r7, #4]
  99 005e 9B6C     		ldr	r3, [r3, #72]
 100 0060 0A43     		orrs	r2, r1
 101 0062 1A60     		str	r2, [r3]
 115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                (~DMAMUX_CxCR_DMAREQ_ID), \
 116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                (pSyncConfig->SyncSignalID | ((pSyncConfig->RequestNumber - 1U) << DMAMUX_CxCR_NBREQ
 117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                 pSyncConfig->SyncPolarity | ((uint32_t)pSyncConfig->SyncEnable << DMAMUX_CxCR_SE_Po
 118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                 ((uint32_t)pSyncConfig->EventEnable << DMAMUX_CxCR_EGE_Pos)));
 119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Process UnLocked */
 121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     __HAL_UNLOCK(hdma);
 102              		.loc 1 121 5 discriminator 2
 103 0064 7B68     		ldr	r3, [r7, #4]
 104 0066 2422     		movs	r2, #36
 105 0068 0021     		movs	r1, #0
 106 006a 9954     		strb	r1, [r3, r2]
 122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_OK;
 107              		.loc 1 123 12 discriminator 2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s 			page 5


 108 006c 0023     		movs	r3, #0
 109 006e 03E0     		b	.L4
 110              	.L2:
 124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   else
 126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Set the error code to busy */
 128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 111              		.loc 1 128 21
 112 0070 7B68     		ldr	r3, [r7, #4]
 113 0072 8022     		movs	r2, #128
 114 0074 DA63     		str	r2, [r3, #60]
 129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Return error status */
 131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_ERROR;
 115              		.loc 1 131 12
 116 0076 0123     		movs	r3, #1
 117              	.L4:
 132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** }
 118              		.loc 1 133 1
 119 0078 1800     		movs	r0, r3
 120 007a BD46     		mov	sp, r7
 121 007c 02B0     		add	sp, sp, #8
 122              		@ sp needed
 123 007e 80BD     		pop	{r7, pc}
 124              		.cfi_endproc
 125              	.LFE363:
 127              		.section	.text.HAL_DMAEx_ConfigMuxRequestGenerator,"ax",%progbits
 128              		.align	1
 129              		.global	HAL_DMAEx_ConfigMuxRequestGenerator
 130              		.syntax unified
 131              		.code	16
 132              		.thumb_func
 134              	HAL_DMAEx_ConfigMuxRequestGenerator:
 135              	.LFB364:
 134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /**
 136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief Configure the DMAMUX request generator block used by the given DMA channel (instance).
 137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *             the configuration information for the specified DMA channel.
 139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param pRequestGeneratorConfig Pointer to HAL_DMA_MuxRequestGeneratorConfigTypeDef
 140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *                                contains the request generator parameters.
 141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *
 142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @retval HAL status
 143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** HAL_StatusTypeDef HAL_DMAEx_ConfigMuxRequestGenerator(DMA_HandleTypeDef *hdma,
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                                       HAL_DMA_MuxRequestGeneratorConfigTypeDef *pRe
 146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** {
 136              		.loc 1 146 1
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 16
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140 0000 80B5     		push	{r7, lr}
 141              	.LCFI3:
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 7, -8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s 			page 6


 144              		.cfi_offset 14, -4
 145 0002 84B0     		sub	sp, sp, #16
 146              	.LCFI4:
 147              		.cfi_def_cfa_offset 24
 148 0004 00AF     		add	r7, sp, #0
 149              	.LCFI5:
 150              		.cfi_def_cfa_register 7
 151 0006 7860     		str	r0, [r7, #4]
 152 0008 3960     		str	r1, [r7]
 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   HAL_StatusTypeDef status;
 148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   HAL_DMA_StateTypeDef temp_state = hdma->State;
 153              		.loc 1 148 24
 154 000a 0E23     		movs	r3, #14
 155 000c FB18     		adds	r3, r7, r3
 156 000e 7A68     		ldr	r2, [r7, #4]
 157 0010 2521     		movs	r1, #37
 158 0012 525C     		ldrb	r2, [r2, r1]
 159 0014 1A70     		strb	r2, [r3]
 149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* Check the parameters */
 151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_REQUEST_GEN_SIGNAL_ID(pRequestGeneratorConfig->SignalID));
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_REQUEST_GEN_POLARITY(pRequestGeneratorConfig->Polarity));
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMAMUX_REQUEST_GEN_REQUEST_NUMBER(pRequestGeneratorConfig->RequestNumber));
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* check if the DMA state is ready
 159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****      and DMA is using a DMAMUX request generator block
 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   if (hdma->DMAmuxRequestGen == 0U)
 160              		.loc 1 161 11
 161 0016 7B68     		ldr	r3, [r7, #4]
 162 0018 5B6D     		ldr	r3, [r3, #84]
 163              		.loc 1 161 6
 164 001a 002B     		cmp	r3, #0
 165 001c 07D1     		bne	.L6
 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Set the error code to busy */
 164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 166              		.loc 1 164 21
 167 001e 7B68     		ldr	r3, [r7, #4]
 168 0020 4022     		movs	r2, #64
 169 0022 DA63     		str	r2, [r3, #60]
 165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* error status */
 167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     status = HAL_ERROR;
 170              		.loc 1 167 12
 171 0024 0F23     		movs	r3, #15
 172 0026 FB18     		adds	r3, r7, r3
 173 0028 0122     		movs	r2, #1
 174 002a 1A70     		strb	r2, [r3]
 175 002c 31E0     		b	.L7
 176              	.L6:
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   else if (((hdma->DMAmuxRequestGen->RGCR & DMAMUX_RGxCR_GE) == 0U) && (temp_state == HAL_DMA_STATE
 177              		.loc 1 169 18
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s 			page 7


 178 002e 7B68     		ldr	r3, [r7, #4]
 179 0030 5B6D     		ldr	r3, [r3, #84]
 180              		.loc 1 169 36
 181 0032 1A68     		ldr	r2, [r3]
 182              		.loc 1 169 43
 183 0034 8023     		movs	r3, #128
 184 0036 5B02     		lsls	r3, r3, #9
 185 0038 1340     		ands	r3, r2
 186              		.loc 1 169 11
 187 003a 23D1     		bne	.L8
 188              		.loc 1 169 69 discriminator 1
 189 003c 0E23     		movs	r3, #14
 190 003e FB18     		adds	r3, r7, r3
 191 0040 1B78     		ldrb	r3, [r3]
 192 0042 012B     		cmp	r3, #1
 193 0044 1ED1     		bne	.L8
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* RequestGenerator must be disable prior to the configuration i.e GE bit is 0 */
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Process Locked */
 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     __HAL_LOCK(hdma);
 194              		.loc 1 174 5
 195 0046 7B68     		ldr	r3, [r7, #4]
 196 0048 2422     		movs	r2, #36
 197 004a 9B5C     		ldrb	r3, [r3, r2]
 198 004c 012B     		cmp	r3, #1
 199 004e 01D1     		bne	.L9
 200              		.loc 1 174 5 is_stmt 0 discriminator 1
 201 0050 0223     		movs	r3, #2
 202 0052 21E0     		b	.L10
 203              	.L9:
 204              		.loc 1 174 5 discriminator 2
 205 0054 7B68     		ldr	r3, [r7, #4]
 206 0056 2422     		movs	r2, #36
 207 0058 0121     		movs	r1, #1
 208 005a 9954     		strb	r1, [r3, r2]
 175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Set the request generator new parameters*/
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->DMAmuxRequestGen->RGCR = pRequestGeneratorConfig->SignalID | \
 209              		.loc 1 177 59 is_stmt 1 discriminator 2
 210 005c 3B68     		ldr	r3, [r7]
 211 005e 1A68     		ldr	r2, [r3]
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                    ((pRequestGeneratorConfig->RequestNumber - 1U) << DMAMUX_RGxCR_G
 212              		.loc 1 178 61 discriminator 2
 213 0060 3B68     		ldr	r3, [r7]
 214 0062 9B68     		ldr	r3, [r3, #8]
 215              		.loc 1 178 77 discriminator 2
 216 0064 013B     		subs	r3, r3, #1
 217              		.loc 1 178 83 discriminator 2
 218 0066 DB04     		lsls	r3, r3, #19
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                    ((pRequestGeneratorConfig->RequestNumber - 1U) << DMAMUX_RGxCR_G
 219              		.loc 1 177 70 discriminator 2
 220 0068 1A43     		orrs	r2, r3
 221 006a 1100     		movs	r1, r2
 179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                    pRequestGeneratorConfig->Polarity;
 222              		.loc 1 179 59 discriminator 2
 223 006c 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s 			page 8


 224 006e 5A68     		ldr	r2, [r3, #4]
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                    ((pRequestGeneratorConfig->RequestNumber - 1U) << DMAMUX_RGxCR_G
 225              		.loc 1 177 9 discriminator 2
 226 0070 7B68     		ldr	r3, [r7, #4]
 227 0072 5B6D     		ldr	r3, [r3, #84]
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                    ((pRequestGeneratorConfig->RequestNumber - 1U) << DMAMUX_RGxCR_G
 228              		.loc 1 178 111 discriminator 2
 229 0074 0A43     		orrs	r2, r1
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****                                    ((pRequestGeneratorConfig->RequestNumber - 1U) << DMAMUX_RGxCR_G
 230              		.loc 1 177 34 discriminator 2
 231 0076 1A60     		str	r2, [r3]
 180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Process UnLocked */
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     __HAL_UNLOCK(hdma);
 232              		.loc 1 181 5 discriminator 2
 233 0078 7B68     		ldr	r3, [r7, #4]
 234 007a 2422     		movs	r2, #36
 235 007c 0021     		movs	r1, #0
 236 007e 9954     		strb	r1, [r3, r2]
 182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_OK;
 237              		.loc 1 183 12 discriminator 2
 238 0080 0023     		movs	r3, #0
 239 0082 09E0     		b	.L10
 240              	.L8:
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   else
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Set the error code to busy */
 188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 241              		.loc 1 188 21
 242 0084 7B68     		ldr	r3, [r7, #4]
 243 0086 8022     		movs	r2, #128
 244 0088 DA63     		str	r2, [r3, #60]
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* error status */
 191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     status = HAL_ERROR;
 245              		.loc 1 191 12
 246 008a 0F23     		movs	r3, #15
 247 008c FB18     		adds	r3, r7, r3
 248 008e 0122     		movs	r2, #1
 249 0090 1A70     		strb	r2, [r3]
 250              	.L7:
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   return status;
 251              		.loc 1 194 10
 252 0092 0F23     		movs	r3, #15
 253 0094 FB18     		adds	r3, r7, r3
 254 0096 1B78     		ldrb	r3, [r3]
 255              	.L10:
 195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** }
 256              		.loc 1 195 1
 257 0098 1800     		movs	r0, r3
 258 009a BD46     		mov	sp, r7
 259 009c 04B0     		add	sp, sp, #16
 260              		@ sp needed
 261 009e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s 			page 9


 262              		.cfi_endproc
 263              	.LFE364:
 265              		.section	.text.HAL_DMAEx_EnableMuxRequestGenerator,"ax",%progbits
 266              		.align	1
 267              		.global	HAL_DMAEx_EnableMuxRequestGenerator
 268              		.syntax unified
 269              		.code	16
 270              		.thumb_func
 272              	HAL_DMAEx_EnableMuxRequestGenerator:
 273              	.LFB365:
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /**
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief Enable the DMAMUX request generator block used by the given DMA channel (instance).
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *             the configuration information for the specified DMA channel.
 201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @retval HAL status
 202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** HAL_StatusTypeDef HAL_DMAEx_EnableMuxRequestGenerator(DMA_HandleTypeDef *hdma)
 204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** {
 274              		.loc 1 204 1
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 8
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278 0000 80B5     		push	{r7, lr}
 279              	.LCFI6:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 7, -8
 282              		.cfi_offset 14, -4
 283 0002 82B0     		sub	sp, sp, #8
 284              	.LCFI7:
 285              		.cfi_def_cfa_offset 16
 286 0004 00AF     		add	r7, sp, #0
 287              	.LCFI8:
 288              		.cfi_def_cfa_register 7
 289 0006 7860     		str	r0, [r7, #4]
 205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* Check the parameters */
 206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* check if the DMA state is ready
 209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****      and DMA is using a DMAMUX request generator block
 210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   if ((hdma->State != HAL_DMA_STATE_RESET) && (hdma->DMAmuxRequestGen != 0))
 290              		.loc 1 211 12
 291 0008 7B68     		ldr	r3, [r7, #4]
 292 000a 2522     		movs	r2, #37
 293 000c 9B5C     		ldrb	r3, [r3, r2]
 294 000e DBB2     		uxtb	r3, r3
 295              		.loc 1 211 6
 296 0010 002B     		cmp	r3, #0
 297 0012 0ED0     		beq	.L12
 298              		.loc 1 211 52 discriminator 1
 299 0014 7B68     		ldr	r3, [r7, #4]
 300 0016 5B6D     		ldr	r3, [r3, #84]
 301              		.loc 1 211 44 discriminator 1
 302 0018 002B     		cmp	r3, #0
 303 001a 0AD0     		beq	.L12
 212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s 			page 10


 213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Enable the request generator*/
 215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->DMAmuxRequestGen->RGCR |= DMAMUX_RGxCR_GE;
 304              		.loc 1 215 9
 305 001c 7B68     		ldr	r3, [r7, #4]
 306 001e 5B6D     		ldr	r3, [r3, #84]
 307              		.loc 1 215 34
 308 0020 1A68     		ldr	r2, [r3]
 309              		.loc 1 215 9
 310 0022 7B68     		ldr	r3, [r7, #4]
 311 0024 5B6D     		ldr	r3, [r3, #84]
 312              		.loc 1 215 34
 313 0026 8021     		movs	r1, #128
 314 0028 4902     		lsls	r1, r1, #9
 315 002a 0A43     		orrs	r2, r1
 316 002c 1A60     		str	r2, [r3]
 216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_OK;
 317              		.loc 1 217 12
 318 002e 0023     		movs	r3, #0
 319 0030 00E0     		b	.L13
 320              	.L12:
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   else
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_ERROR;
 321              		.loc 1 221 12
 322 0032 0123     		movs	r3, #1
 323              	.L13:
 222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** }
 324              		.loc 1 223 1
 325 0034 1800     		movs	r0, r3
 326 0036 BD46     		mov	sp, r7
 327 0038 02B0     		add	sp, sp, #8
 328              		@ sp needed
 329 003a 80BD     		pop	{r7, pc}
 330              		.cfi_endproc
 331              	.LFE365:
 333              		.section	.text.HAL_DMAEx_DisableMuxRequestGenerator,"ax",%progbits
 334              		.align	1
 335              		.global	HAL_DMAEx_DisableMuxRequestGenerator
 336              		.syntax unified
 337              		.code	16
 338              		.thumb_func
 340              	HAL_DMAEx_DisableMuxRequestGenerator:
 341              	.LFB366:
 224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /**
 226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief Disable the DMAMUX request generator block used by the given DMA channel (instance).
 227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *             the configuration information for the specified DMA channel.
 229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @retval HAL status
 230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** HAL_StatusTypeDef HAL_DMAEx_DisableMuxRequestGenerator(DMA_HandleTypeDef *hdma)
 232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** {
 342              		.loc 1 232 1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s 			page 11


 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 8
 345              		@ frame_needed = 1, uses_anonymous_args = 0
 346 0000 80B5     		push	{r7, lr}
 347              	.LCFI9:
 348              		.cfi_def_cfa_offset 8
 349              		.cfi_offset 7, -8
 350              		.cfi_offset 14, -4
 351 0002 82B0     		sub	sp, sp, #8
 352              	.LCFI10:
 353              		.cfi_def_cfa_offset 16
 354 0004 00AF     		add	r7, sp, #0
 355              	.LCFI11:
 356              		.cfi_def_cfa_register 7
 357 0006 7860     		str	r0, [r7, #4]
 233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* Check the parameters */
 234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* check if the DMA state is ready
 237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****      and DMA is using a DMAMUX request generator block
 238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   if ((hdma->State != HAL_DMA_STATE_RESET) && (hdma->DMAmuxRequestGen != 0))
 358              		.loc 1 239 12
 359 0008 7B68     		ldr	r3, [r7, #4]
 360 000a 2522     		movs	r2, #37
 361 000c 9B5C     		ldrb	r3, [r3, r2]
 362 000e DBB2     		uxtb	r3, r3
 363              		.loc 1 239 6
 364 0010 002B     		cmp	r3, #0
 365 0012 0DD0     		beq	.L15
 366              		.loc 1 239 52 discriminator 1
 367 0014 7B68     		ldr	r3, [r7, #4]
 368 0016 5B6D     		ldr	r3, [r3, #84]
 369              		.loc 1 239 44 discriminator 1
 370 0018 002B     		cmp	r3, #0
 371 001a 09D0     		beq	.L15
 240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Disable the request generator*/
 243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_GE;
 372              		.loc 1 243 9
 373 001c 7B68     		ldr	r3, [r7, #4]
 374 001e 5B6D     		ldr	r3, [r3, #84]
 375              		.loc 1 243 34
 376 0020 1A68     		ldr	r2, [r3]
 377              		.loc 1 243 9
 378 0022 7B68     		ldr	r3, [r7, #4]
 379 0024 5B6D     		ldr	r3, [r3, #84]
 380              		.loc 1 243 34
 381 0026 0549     		ldr	r1, .L17
 382 0028 0A40     		ands	r2, r1
 383 002a 1A60     		str	r2, [r3]
 244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_OK;
 384              		.loc 1 245 12
 385 002c 0023     		movs	r3, #0
 386 002e 00E0     		b	.L16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s 			page 12


 387              	.L15:
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   else
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     return HAL_ERROR;
 388              		.loc 1 249 12
 389 0030 0123     		movs	r3, #1
 390              	.L16:
 250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** }
 391              		.loc 1 251 1
 392 0032 1800     		movs	r0, r3
 393 0034 BD46     		mov	sp, r7
 394 0036 02B0     		add	sp, sp, #8
 395              		@ sp needed
 396 0038 80BD     		pop	{r7, pc}
 397              	.L18:
 398 003a C046     		.align	2
 399              	.L17:
 400 003c FFFFFEFF 		.word	-65537
 401              		.cfi_endproc
 402              	.LFE366:
 404              		.section	.text.HAL_DMAEx_MUX_IRQHandler,"ax",%progbits
 405              		.align	1
 406              		.global	HAL_DMAEx_MUX_IRQHandler
 407              		.syntax unified
 408              		.code	16
 409              		.thumb_func
 411              	HAL_DMAEx_MUX_IRQHandler:
 412              	.LFB367:
 252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** /**
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @brief Handles DMAMUX interrupt request.
 255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   *             the configuration information for the specified DMA channel.
 257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   * @retval None
 258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   */
 259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** void HAL_DMAEx_MUX_IRQHandler(DMA_HandleTypeDef *hdma)
 260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** {
 413              		.loc 1 260 1
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 8
 416              		@ frame_needed = 1, uses_anonymous_args = 0
 417 0000 80B5     		push	{r7, lr}
 418              	.LCFI12:
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 7, -8
 421              		.cfi_offset 14, -4
 422 0002 82B0     		sub	sp, sp, #8
 423              	.LCFI13:
 424              		.cfi_def_cfa_offset 16
 425 0004 00AF     		add	r7, sp, #0
 426              	.LCFI14:
 427              		.cfi_def_cfa_register 7
 428 0006 7860     		str	r0, [r7, #4]
 261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   /* Check for DMAMUX Synchronization overrun */
 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   if ((hdma->DMAmuxChannelStatus->CSR & hdma->DMAmuxChannelStatusMask) != 0U)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s 			page 13


 429              		.loc 1 262 12
 430 0008 7B68     		ldr	r3, [r7, #4]
 431 000a DB6C     		ldr	r3, [r3, #76]
 432              		.loc 1 262 33
 433 000c 1A68     		ldr	r2, [r3]
 434              		.loc 1 262 45
 435 000e 7B68     		ldr	r3, [r7, #4]
 436 0010 1B6D     		ldr	r3, [r3, #80]
 437              		.loc 1 262 39
 438 0012 1340     		ands	r3, r2
 439              		.loc 1 262 6
 440 0014 1CD0     		beq	.L20
 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Disable the synchro overrun interrupt */
 265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 441              		.loc 1 265 9
 442 0016 7B68     		ldr	r3, [r7, #4]
 443 0018 9B6C     		ldr	r3, [r3, #72]
 444              		.loc 1 265 30
 445 001a 1A68     		ldr	r2, [r3]
 446              		.loc 1 265 9
 447 001c 7B68     		ldr	r3, [r7, #4]
 448 001e 9B6C     		ldr	r3, [r3, #72]
 449              		.loc 1 265 30
 450 0020 2149     		ldr	r1, .L23
 451 0022 0A40     		ands	r2, r1
 452 0024 1A60     		str	r2, [r3]
 266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Clear the DMAMUX synchro overrun flag */
 268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 453              		.loc 1 268 9
 454 0026 7B68     		ldr	r3, [r7, #4]
 455 0028 DB6C     		ldr	r3, [r3, #76]
 456              		.loc 1 268 42
 457 002a 7A68     		ldr	r2, [r7, #4]
 458 002c 126D     		ldr	r2, [r2, #80]
 459              		.loc 1 268 36
 460 002e 5A60     		str	r2, [r3, #4]
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* Update error code */
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     hdma->ErrorCode |= HAL_DMA_ERROR_SYNC;
 461              		.loc 1 271 21
 462 0030 7B68     		ldr	r3, [r7, #4]
 463 0032 DB6B     		ldr	r3, [r3, #60]
 464 0034 8022     		movs	r2, #128
 465 0036 9200     		lsls	r2, r2, #2
 466 0038 1A43     		orrs	r2, r3
 467 003a 7B68     		ldr	r3, [r7, #4]
 468 003c DA63     		str	r2, [r3, #60]
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     if (hdma->XferErrorCallback != NULL)
 469              		.loc 1 273 13
 470 003e 7B68     		ldr	r3, [r7, #4]
 471 0040 5B6B     		ldr	r3, [r3, #52]
 472              		.loc 1 273 8
 473 0042 002B     		cmp	r3, #0
 474 0044 04D0     		beq	.L20
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s 			page 14


 274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     {
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       /* Transfer error callback */
 276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       hdma->XferErrorCallback(hdma);
 475              		.loc 1 276 11
 476 0046 7B68     		ldr	r3, [r7, #4]
 477 0048 5B6B     		ldr	r3, [r3, #52]
 478              		.loc 1 276 7
 479 004a 7A68     		ldr	r2, [r7, #4]
 480 004c 1000     		movs	r0, r2
 481 004e 9847     		blx	r3
 482              	.LVL0:
 483              	.L20:
 277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     }
 278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   if (hdma->DMAmuxRequestGen != 0)
 484              		.loc 1 280 11
 485 0050 7B68     		ldr	r3, [r7, #4]
 486 0052 5B6D     		ldr	r3, [r3, #84]
 487              		.loc 1 280 6
 488 0054 002B     		cmp	r3, #0
 489 0056 23D0     		beq	.L22
 281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   {
 282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     /* if using a DMAMUX request generator block Check for DMAMUX request generator overrun */
 283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     if ((hdma->DMAmuxRequestGenStatus->RGSR & hdma->DMAmuxRequestGenStatusMask) != 0U)
 490              		.loc 1 283 14
 491 0058 7B68     		ldr	r3, [r7, #4]
 492 005a 9B6D     		ldr	r3, [r3, #88]
 493              		.loc 1 283 38
 494 005c 1A68     		ldr	r2, [r3]
 495              		.loc 1 283 51
 496 005e 7B68     		ldr	r3, [r7, #4]
 497 0060 DB6D     		ldr	r3, [r3, #92]
 498              		.loc 1 283 45
 499 0062 1340     		ands	r3, r2
 500              		.loc 1 283 8
 501 0064 1CD0     		beq	.L22
 284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     {
 285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       /* Disable the request gen overrun interrupt */
 286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 502              		.loc 1 286 11
 503 0066 7B68     		ldr	r3, [r7, #4]
 504 0068 5B6D     		ldr	r3, [r3, #84]
 505              		.loc 1 286 36
 506 006a 1A68     		ldr	r2, [r3]
 507              		.loc 1 286 11
 508 006c 7B68     		ldr	r3, [r7, #4]
 509 006e 5B6D     		ldr	r3, [r3, #84]
 510              		.loc 1 286 36
 511 0070 0D49     		ldr	r1, .L23
 512 0072 0A40     		ands	r2, r1
 513 0074 1A60     		str	r2, [r3]
 287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       /* Clear the DMAMUX request generator overrun flag */
 289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 514              		.loc 1 289 11
 515 0076 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s 			page 15


 516 0078 9B6D     		ldr	r3, [r3, #88]
 517              		.loc 1 289 49
 518 007a 7A68     		ldr	r2, [r7, #4]
 519 007c D26D     		ldr	r2, [r2, #92]
 520              		.loc 1 289 43
 521 007e 5A60     		str	r2, [r3, #4]
 290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       /* Update error code */
 292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_REQGEN;
 522              		.loc 1 292 23
 523 0080 7B68     		ldr	r3, [r7, #4]
 524 0082 DB6B     		ldr	r3, [r3, #60]
 525 0084 8022     		movs	r2, #128
 526 0086 D200     		lsls	r2, r2, #3
 527 0088 1A43     		orrs	r2, r3
 528 008a 7B68     		ldr	r3, [r7, #4]
 529 008c DA63     		str	r2, [r3, #60]
 293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** 
 294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       if (hdma->XferErrorCallback != NULL)
 530              		.loc 1 294 15
 531 008e 7B68     		ldr	r3, [r7, #4]
 532 0090 5B6B     		ldr	r3, [r3, #52]
 533              		.loc 1 294 10
 534 0092 002B     		cmp	r3, #0
 535 0094 04D0     		beq	.L22
 295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       {
 296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****         /* Transfer error callback */
 297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****         hdma->XferErrorCallback(hdma);
 536              		.loc 1 297 13
 537 0096 7B68     		ldr	r3, [r7, #4]
 538 0098 5B6B     		ldr	r3, [r3, #52]
 539              		.loc 1 297 9
 540 009a 7A68     		ldr	r2, [r7, #4]
 541 009c 1000     		movs	r0, r2
 542 009e 9847     		blx	r3
 543              	.LVL1:
 544              	.L22:
 298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****       }
 299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****     }
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c ****   }
 301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c **** }
 545              		.loc 1 301 1
 546 00a0 C046     		nop
 547 00a2 BD46     		mov	sp, r7
 548 00a4 02B0     		add	sp, sp, #8
 549              		@ sp needed
 550 00a6 80BD     		pop	{r7, pc}
 551              	.L24:
 552              		.align	2
 553              	.L23:
 554 00a8 FFFEFFFF 		.word	-257
 555              		.cfi_endproc
 556              	.LFE367:
 558              		.text
 559              	.Letext0:
 560              		.file 2 "c:\\users\\administrator\\documents\\toolstm\\arm\\arm-none-eabi\\include\\machine\\_defa
 561              		.file 3 "c:\\users\\administrator\\documents\\toolstm\\arm\\arm-none-eabi\\include\\sys\\_stdint.h
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s 			page 16


 562              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0b1xx.h"
 563              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0xx.h"
 564              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 565              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 566              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma_ex.h"
 567              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_hal_dma_ex.c
C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s:18     .rodata.CHANNEL_OFFSET_TAB:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s:21     .rodata.CHANNEL_OFFSET_TAB:00000000 CHANNEL_OFFSET_TAB
C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s:24     .text.HAL_DMAEx_ConfigMuxSync:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s:30     .text.HAL_DMAEx_ConfigMuxSync:00000000 HAL_DMAEx_ConfigMuxSync
C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s:128    .text.HAL_DMAEx_ConfigMuxRequestGenerator:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s:134    .text.HAL_DMAEx_ConfigMuxRequestGenerator:00000000 HAL_DMAEx_ConfigMuxRequestGenerator
C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s:266    .text.HAL_DMAEx_EnableMuxRequestGenerator:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s:272    .text.HAL_DMAEx_EnableMuxRequestGenerator:00000000 HAL_DMAEx_EnableMuxRequestGenerator
C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s:334    .text.HAL_DMAEx_DisableMuxRequestGenerator:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s:340    .text.HAL_DMAEx_DisableMuxRequestGenerator:00000000 HAL_DMAEx_DisableMuxRequestGenerator
C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s:400    .text.HAL_DMAEx_DisableMuxRequestGenerator:0000003c $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s:405    .text.HAL_DMAEx_MUX_IRQHandler:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s:411    .text.HAL_DMAEx_MUX_IRQHandler:00000000 HAL_DMAEx_MUX_IRQHandler
C:\Users\ADMINI~1\AppData\Local\Temp\ccW9jwED.s:554    .text.HAL_DMAEx_MUX_IRQHandler:000000a8 $d

NO UNDEFINED SYMBOLS
