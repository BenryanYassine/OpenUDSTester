ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g0xx_hal_dma.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.CHANNEL_OFFSET_TAB,"a"
  18              		.align	2
  21              	CHANNEL_OFFSET_TAB:
  22 0000 081C3044 		.ascii	"\010\0340DXl\200"
  22      586C80
  23              		.global	__aeabi_uidiv
  24              		.section	.text.HAL_DMA_Init,"ax",%progbits
  25              		.align	1
  26              		.global	HAL_DMA_Init
  27              		.syntax unified
  28              		.code	16
  29              		.thumb_func
  31              	HAL_DMA_Init:
  32              	.LFB363:
  33              		.file 1 "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c"
   1:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @file    stm32g0xx_hal_dma.c
   4:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief   DMA HAL module driver.
   6:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *          functionalities of the Direct Memory Access (DMA) peripheral:
   8:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *           + IO operation functions
  10:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *           + Peripheral State and errors functions
  11:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *
  12:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   ******************************************************************************
  13:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @attention
  14:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *
  15:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * Copyright (c) 2018 STMicroelectronics.
  16:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * All rights reserved.
  17:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *
  18:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * in the root directory of this software component.
  20:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *
  22:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   ******************************************************************************
  23:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   @verbatim
  24:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   ==============================================================================
  25:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****                         ##### How to use this driver #####
  26:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   ==============================================================================
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 2


  27:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   [..]
  28:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****    (#) Enable and configure the peripheral to be connected to the DMA Channel
  29:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (except for internal SRAM / FLASH memories: no initialization is
  30:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        necessary). Please refer to the Reference manual for connection between peripherals
  31:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        and DMA requests.
  32:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  33:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****    (#) For a given Channel, program the required configuration through the following parameters:
  34:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        Channel request, Transfer Direction, Source and Destination data formats,
  35:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        Circular or Normal mode, Channel Priority level, Source and Destination Increment mode
  36:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        using HAL_DMA_Init() function.
  37:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  38:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        Prior to HAL_DMA_Init the peripheral clock shall be enabled for both DMA & DMAMUX
  39:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        thanks to:
  40:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       (##) DMA1 or DMA2: __HAL_RCC_DMA1_CLK_ENABLE() or  __HAL_RCC_DMA2_CLK_ENABLE();
  41:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  42:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****    (#) Use HAL_DMA_GetState() function to return the DMA state and HAL_DMA_GetError() in case of er
  43:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        detection.
  44:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  45:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****    (#) Use HAL_DMA_Abort() function to abort the current transfer
  46:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  47:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      -@-   In Memory-to-Memory transfer mode, Circular mode is not allowed.
  48:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  49:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      *** Polling mode IO operation ***
  50:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      =================================
  51:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      [..]
  52:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) Use HAL_DMA_Start() to start DMA transfer after the configuration of Source
  53:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****            address and destination address and the Length of data to be transferred
  54:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) Use HAL_DMA_PollForTransfer() to poll for the end of current transfer, in this
  55:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****            case a fixed Timeout can be configured by User depending from his application.
  56:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  57:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      *** Interrupt mode IO operation ***
  58:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      ===================================
  59:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      [..]
  60:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) Configure the DMA interrupt priority using HAL_NVIC_SetPriority()
  61:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) Enable the DMA IRQ handler using HAL_NVIC_EnableIRQ()
  62:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) Use HAL_DMA_Start_IT() to start DMA transfer after the configuration of
  63:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****            Source address and destination address and the Length of data to be transferred.
  64:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****            In this case the DMA interrupt is configured
  65:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) Use HAL_DMA_IRQHandler() called under DMA_IRQHandler() Interrupt subroutine
  66:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) At the end of data transfer HAL_DMA_IRQHandler() function is executed and user can
  67:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****               add his own function to register callbacks with HAL_DMA_RegisterCallback().
  68:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  69:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      *** DMA HAL driver macros list ***
  70:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      =============================================
  71:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      [..]
  72:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        Below the list of macros in DMA HAL driver.
  73:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  74:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) __HAL_DMA_ENABLE: Enable the specified DMA Channel.
  75:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) __HAL_DMA_DISABLE: Disable the specified DMA Channel.
  76:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) __HAL_DMA_GET_FLAG: Get the DMA Channel pending flags.
  77:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) __HAL_DMA_CLEAR_FLAG: Clear the DMA Channel pending flags.
  78:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) __HAL_DMA_ENABLE_IT: Enable the specified DMA Channel interrupts.
  79:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) __HAL_DMA_DISABLE_IT: Disable the specified DMA Channel interrupts.
  80:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        (+) __HAL_DMA_GET_IT_SOURCE: Check whether the specified DMA Channel interrupt is enabled or
  81:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  82:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      [..]
  83:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       (@) You can refer to the DMA HAL driver header file for more useful macros
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 3


  84:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  85:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   @endverbatim
  86:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   ******************************************************************************
  87:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
  88:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  89:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /* Includes ------------------------------------------------------------------*/
  90:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #include "stm32g0xx_hal.h"
  91:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  92:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /** @addtogroup STM32G0xx_HAL_Driver
  93:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @{
  94:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
  95:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
  96:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /** @defgroup DMA DMA
  97:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief DMA HAL module driver
  98:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @{
  99:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #ifdef HAL_DMA_MODULE_ENABLED
 102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /* Private typedef -----------------------------------------------------------*/
 104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /* Private define ------------------------------------------------------------*/
 105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /* Private macro -------------------------------------------------------------*/
 106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /* Private variables ---------------------------------------------------------*/
 107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /* Private function prototypes -----------------------------------------------*/
 108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /** @defgroup DMA_Private_Functions DMA Private Functions
 110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @{
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** static void DMA_CalcDMAMUXChannelBaseAndMask(DMA_HandleTypeDef *hdma);
 114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** static void DMA_CalcDMAMUXRequestGenBaseAndMask(DMA_HandleTypeDef *hdma);
 115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @}
 118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /* Exported functions ---------------------------------------------------------*/
 121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions DMA Exported Functions
 123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @{
 124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions_Group1 Initialization and de-initialization functions
 127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *  @brief   Initialization and de-initialization functions
 128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *
 129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** @verbatim
 130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****  ===============================================================================
 131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****              ##### Initialization and de-initialization functions  #####
 132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****  ===============================================================================
 133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     [..]
 134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     This section provides functions allowing to initialize the DMA Channel source
 135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     and destination addresses, incrementation and data sizes, transfer direction,
 136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     circular/normal mode selection, memory-to-memory mode selection and Channel priority value.
 137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     [..]
 138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     The HAL_DMA_Init() function follows the DMA configuration procedures as described in
 139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     reference manual.
 140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 4


 141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** @endverbatim
 142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @{
 143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief Initialize the DMA according to the specified
 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *        parameters in the DMA_InitTypeDef and initialize the associated handle.
 148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *             the configuration information for the specified DMA Channel.
 150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
 151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
 153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
  34              		.loc 1 153 1
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 82B0     		sub	sp, sp, #8
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 16
  46 0004 00AF     		add	r7, sp, #0
  47              	.LCFI2:
  48              		.cfi_def_cfa_register 7
  49 0006 7860     		str	r0, [r7, #4]
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the DMA handle allocation */
 155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (hdma == NULL)
  50              		.loc 1 155 6
  51 0008 7B68     		ldr	r3, [r7, #4]
  52 000a 002B     		cmp	r3, #0
  53 000c 01D1     		bne	.L2
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     return HAL_ERROR;
  54              		.loc 1 157 12
  55 000e 0123     		movs	r3, #1
  56 0010 91E0     		b	.L3
  57              	.L2:
 158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the parameters */
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_MODE(hdma->Init.Mode));
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_ALL_REQUEST(hdma->Init.Request));
 171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Compute the channel index */
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #if defined(DMA2)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 5


 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if ((uint32_t)(hdma->Instance) < (uint32_t)(DMA2_Channel1))
  58              		.loc 1 174 22
  59 0012 7B68     		ldr	r3, [r7, #4]
  60 0014 1B68     		ldr	r3, [r3]
  61              		.loc 1 174 7
  62 0016 1A00     		movs	r2, r3
  63              		.loc 1 174 6
  64 0018 494B     		ldr	r3, .L9
  65 001a 9A42     		cmp	r2, r3
  66 001c 10D8     		bhi	.L4
 175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* DMA1 */
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Ch
  67              		.loc 1 177 42
  68 001e 7B68     		ldr	r3, [r7, #4]
  69 0020 1B68     		ldr	r3, [r3]
  70              		.loc 1 177 53
  71 0022 484A     		ldr	r2, .L9+4
  72 0024 9446     		mov	ip, r2
  73 0026 6344     		add	r3, r3, ip
  74              		.loc 1 177 80
  75 0028 1421     		movs	r1, #20
  76 002a 1800     		movs	r0, r3
  77 002c FFF7FEFF 		bl	__aeabi_uidiv
  78 0030 0300     		movs	r3, r0
  79              		.loc 1 177 135
  80 0032 9A00     		lsls	r2, r3, #2
  81              		.loc 1 177 24
  82 0034 7B68     		ldr	r3, [r7, #4]
  83 0036 5A64     		str	r2, [r3, #68]
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DmaBaseAddress = DMA1;
  84              		.loc 1 178 26
  85 0038 7B68     		ldr	r3, [r7, #4]
  86 003a 434A     		ldr	r2, .L9+8
  87 003c 1A64     		str	r2, [r3, #64]
  88 003e 0FE0     		b	.L5
  89              	.L4:
 179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* DMA2 */
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA2_Channel1) / ((uint32_t)DMA2_Ch
  90              		.loc 1 183 42
  91 0040 7B68     		ldr	r3, [r7, #4]
  92 0042 1B68     		ldr	r3, [r3]
  93              		.loc 1 183 53
  94 0044 414A     		ldr	r2, .L9+12
  95 0046 9446     		mov	ip, r2
  96 0048 6344     		add	r3, r3, ip
  97              		.loc 1 183 80
  98 004a 1421     		movs	r1, #20
  99 004c 1800     		movs	r0, r3
 100 004e FFF7FEFF 		bl	__aeabi_uidiv
 101 0052 0300     		movs	r3, r0
 102              		.loc 1 183 135
 103 0054 9A00     		lsls	r2, r3, #2
 104              		.loc 1 183 24
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 6


 105 0056 7B68     		ldr	r3, [r7, #4]
 106 0058 5A64     		str	r2, [r3, #68]
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DmaBaseAddress = DMA2;
 107              		.loc 1 184 26
 108 005a 7B68     		ldr	r3, [r7, #4]
 109 005c 3C4A     		ldr	r2, .L9+16
 110 005e 1A64     		str	r2, [r3, #64]
 111              	.L5:
 185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #else
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Chan
 188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #endif /* DMA2 */
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Change DMA peripheral state */
 191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_BUSY;
 112              		.loc 1 191 15
 113 0060 7B68     		ldr	r3, [r7, #4]
 114 0062 2522     		movs	r2, #37
 115 0064 0221     		movs	r1, #2
 116 0066 9954     		strb	r1, [r3, r2]
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Clear PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR and MEM2MEM bits */
 194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   CLEAR_BIT(hdma->Instance->CCR, (DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
 117              		.loc 1 194 3
 118 0068 7B68     		ldr	r3, [r7, #4]
 119 006a 1B68     		ldr	r3, [r3]
 120 006c 1A68     		ldr	r2, [r3]
 121 006e 7B68     		ldr	r3, [r7, #4]
 122 0070 1B68     		ldr	r3, [r3]
 123 0072 3849     		ldr	r1, .L9+20
 124 0074 0A40     		ands	r2, r1
 125 0076 1A60     		str	r2, [r3]
 195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****                                   DMA_CCR_MINC  | DMA_CCR_PINC   | DMA_CCR_CIRC   | \
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****                                   DMA_CCR_DIR   | DMA_CCR_MEM2MEM));
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Set the DMA Channel configuration */
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   SET_BIT(hdma->Instance->CCR, (hdma->Init.Direction           |                               \
 126              		.loc 1 199 3
 127 0078 7B68     		ldr	r3, [r7, #4]
 128 007a 1B68     		ldr	r3, [r3]
 129 007c 1968     		ldr	r1, [r3]
 130 007e 7B68     		ldr	r3, [r7, #4]
 131 0080 9A68     		ldr	r2, [r3, #8]
 132 0082 7B68     		ldr	r3, [r7, #4]
 133 0084 DB68     		ldr	r3, [r3, #12]
 134 0086 1A43     		orrs	r2, r3
 135 0088 7B68     		ldr	r3, [r7, #4]
 136 008a 1B69     		ldr	r3, [r3, #16]
 137 008c 1A43     		orrs	r2, r3
 138 008e 7B68     		ldr	r3, [r7, #4]
 139 0090 5B69     		ldr	r3, [r3, #20]
 140 0092 1A43     		orrs	r2, r3
 141 0094 7B68     		ldr	r3, [r7, #4]
 142 0096 9B69     		ldr	r3, [r3, #24]
 143 0098 1A43     		orrs	r2, r3
 144 009a 7B68     		ldr	r3, [r7, #4]
 145 009c DB69     		ldr	r3, [r3, #28]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 7


 146 009e 1A43     		orrs	r2, r3
 147 00a0 7B68     		ldr	r3, [r7, #4]
 148 00a2 1B6A     		ldr	r3, [r3, #32]
 149 00a4 1A43     		orrs	r2, r3
 150 00a6 7B68     		ldr	r3, [r7, #4]
 151 00a8 1B68     		ldr	r3, [r3]
 152 00aa 0A43     		orrs	r2, r1
 153 00ac 1A60     		str	r2, [r3]
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****                                 hdma->Init.PeriphInc           | hdma->Init.MemInc           | \
 201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****                                 hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment | \
 202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****                                 hdma->Init.Mode                | hdma->Init.Priority));
 203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Initialize parameters for DMAMUX channel :
 205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      DMAmuxChannel, DMAmuxChannelStatus and DMAmuxChannelStatusMask
 206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   DMA_CalcDMAMUXChannelBaseAndMask(hdma);
 154              		.loc 1 207 3
 155 00ae 7B68     		ldr	r3, [r7, #4]
 156 00b0 1800     		movs	r0, r3
 157 00b2 FFF7FEFF 		bl	DMA_CalcDMAMUXChannelBaseAndMask
 208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (hdma->Init.Direction == DMA_MEMORY_TO_MEMORY)
 158              		.loc 1 209 17
 159 00b6 7B68     		ldr	r3, [r7, #4]
 160 00b8 9A68     		ldr	r2, [r3, #8]
 161              		.loc 1 209 6
 162 00ba 8023     		movs	r3, #128
 163 00bc DB01     		lsls	r3, r3, #7
 164 00be 9A42     		cmp	r2, r3
 165 00c0 02D1     		bne	.L6
 210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* if memory to memory force the request to 0*/
 212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->Init.Request = DMA_REQUEST_MEM2MEM;
 166              		.loc 1 212 24
 167 00c2 7B68     		ldr	r3, [r7, #4]
 168 00c4 0022     		movs	r2, #0
 169 00c6 5A60     		str	r2, [r3, #4]
 170              	.L6:
 213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Set peripheral request  to DMAMUX channel */
 216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxChannel->CCR = (hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID);
 171              		.loc 1 216 41
 172 00c8 7B68     		ldr	r3, [r7, #4]
 173 00ca 5A68     		ldr	r2, [r3, #4]
 174              		.loc 1 216 7
 175 00cc 7B68     		ldr	r3, [r7, #4]
 176 00ce 9B6C     		ldr	r3, [r3, #72]
 177              		.loc 1 216 50
 178 00d0 7F21     		movs	r1, #127
 179 00d2 0A40     		ands	r2, r1
 180              		.loc 1 216 28
 181 00d4 1A60     		str	r2, [r3]
 217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Clear the DMAMUX synchro overrun flag */
 219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 182              		.loc 1 219 7
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 8


 183 00d6 7B68     		ldr	r3, [r7, #4]
 184 00d8 DB6C     		ldr	r3, [r3, #76]
 185              		.loc 1 219 40
 186 00da 7A68     		ldr	r2, [r7, #4]
 187 00dc 126D     		ldr	r2, [r2, #80]
 188              		.loc 1 219 34
 189 00de 5A60     		str	r2, [r3, #4]
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (((hdma->Init.Request >  0UL) && (hdma->Init.Request <= DMA_REQUEST_GENERATOR3)))
 190              		.loc 1 221 19
 191 00e0 7B68     		ldr	r3, [r7, #4]
 192 00e2 5B68     		ldr	r3, [r3, #4]
 193              		.loc 1 221 6
 194 00e4 002B     		cmp	r3, #0
 195 00e6 11D0     		beq	.L7
 196              		.loc 1 221 50 discriminator 1
 197 00e8 7B68     		ldr	r3, [r7, #4]
 198 00ea 5B68     		ldr	r3, [r3, #4]
 199              		.loc 1 221 36 discriminator 1
 200 00ec 042B     		cmp	r3, #4
 201 00ee 0DD8     		bhi	.L7
 222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Initialize parameters for DMAMUX request generator :
 224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        DMAmuxRequestGen, DMAmuxRequestGenStatus and DMAmuxRequestGenStatusMask
 225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     */
 226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     DMA_CalcDMAMUXRequestGenBaseAndMask(hdma);
 202              		.loc 1 226 5
 203 00f0 7B68     		ldr	r3, [r7, #4]
 204 00f2 1800     		movs	r0, r3
 205 00f4 FFF7FEFF 		bl	DMA_CalcDMAMUXRequestGenBaseAndMask
 227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Reset the DMAMUX request generator register*/
 229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxRequestGen->RGCR = 0U;
 206              		.loc 1 229 9
 207 00f8 7B68     		ldr	r3, [r7, #4]
 208 00fa 5B6D     		ldr	r3, [r3, #84]
 209              		.loc 1 229 34
 210 00fc 0022     		movs	r2, #0
 211 00fe 1A60     		str	r2, [r3]
 230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear the DMAMUX request generator overrun flag */
 232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 212              		.loc 1 232 9
 213 0100 7B68     		ldr	r3, [r7, #4]
 214 0102 9B6D     		ldr	r3, [r3, #88]
 215              		.loc 1 232 47
 216 0104 7A68     		ldr	r2, [r7, #4]
 217 0106 D26D     		ldr	r2, [r2, #92]
 218              		.loc 1 232 41
 219 0108 5A60     		str	r2, [r3, #4]
 220 010a 08E0     		b	.L8
 221              	.L7:
 233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxRequestGen = 0U;
 222              		.loc 1 236 28
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 9


 223 010c 7B68     		ldr	r3, [r7, #4]
 224 010e 0022     		movs	r2, #0
 225 0110 5A65     		str	r2, [r3, #84]
 237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxRequestGenStatus = 0U;
 226              		.loc 1 237 34
 227 0112 7B68     		ldr	r3, [r7, #4]
 228 0114 0022     		movs	r2, #0
 229 0116 9A65     		str	r2, [r3, #88]
 238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxRequestGenStatusMask = 0U;
 230              		.loc 1 238 38
 231 0118 7B68     		ldr	r3, [r7, #4]
 232 011a 0022     		movs	r2, #0
 233 011c DA65     		str	r2, [r3, #92]
 234              	.L8:
 239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Initialize the error code */
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 235              		.loc 1 242 19
 236 011e 7B68     		ldr	r3, [r7, #4]
 237 0120 0022     		movs	r2, #0
 238 0122 DA63     		str	r2, [r3, #60]
 243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Initialize the DMA state*/
 245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_READY;
 239              		.loc 1 245 15
 240 0124 7B68     		ldr	r3, [r7, #4]
 241 0126 2522     		movs	r2, #37
 242 0128 0121     		movs	r1, #1
 243 012a 9954     		strb	r1, [r3, r2]
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Release Lock */
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 244              		.loc 1 248 3
 245 012c 7B68     		ldr	r3, [r7, #4]
 246 012e 2422     		movs	r2, #36
 247 0130 0021     		movs	r1, #0
 248 0132 9954     		strb	r1, [r3, r2]
 249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return HAL_OK;
 249              		.loc 1 250 10
 250 0134 0023     		movs	r3, #0
 251              	.L3:
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 252              		.loc 1 251 1
 253 0136 1800     		movs	r0, r3
 254 0138 BD46     		mov	sp, r7
 255 013a 02B0     		add	sp, sp, #8
 256              		@ sp needed
 257 013c 80BD     		pop	{r7, pc}
 258              	.L10:
 259 013e C046     		.align	2
 260              	.L9:
 261 0140 07040240 		.word	1073873927
 262 0144 F8FFFDBF 		.word	-1073872904
 263 0148 00000240 		.word	1073872896
 264 014c F8FBFDBF 		.word	-1073873928
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 10


 265 0150 00040240 		.word	1073873920
 266 0154 0F80FFFF 		.word	-32753
 267              		.cfi_endproc
 268              	.LFE363:
 270              		.section	.text.HAL_DMA_DeInit,"ax",%progbits
 271              		.align	1
 272              		.global	HAL_DMA_DeInit
 273              		.syntax unified
 274              		.code	16
 275              		.thumb_func
 277              	HAL_DMA_DeInit:
 278              	.LFB364:
 252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief DeInitialize the DMA peripheral.
 255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *             the configuration information for the specified DMA Channel.
 257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
 258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
 260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 279              		.loc 1 260 1
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 8
 282              		@ frame_needed = 1, uses_anonymous_args = 0
 283 0000 80B5     		push	{r7, lr}
 284              	.LCFI3:
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 7, -8
 287              		.cfi_offset 14, -4
 288 0002 82B0     		sub	sp, sp, #8
 289              	.LCFI4:
 290              		.cfi_def_cfa_offset 16
 291 0004 00AF     		add	r7, sp, #0
 292              	.LCFI5:
 293              		.cfi_def_cfa_register 7
 294 0006 7860     		str	r0, [r7, #4]
 261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the DMA handle allocation */
 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (NULL == hdma)
 295              		.loc 1 262 6
 296 0008 7B68     		ldr	r3, [r7, #4]
 297 000a 002B     		cmp	r3, #0
 298 000c 01D1     		bne	.L12
 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     return HAL_ERROR;
 299              		.loc 1 264 12
 300 000e 0123     		movs	r3, #1
 301 0010 7FE0     		b	.L13
 302              	.L12:
 265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the parameters */
 268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Disable the selected DMA Channelx */
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 303              		.loc 1 271 3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 11


 304 0012 7B68     		ldr	r3, [r7, #4]
 305 0014 1B68     		ldr	r3, [r3]
 306 0016 1A68     		ldr	r2, [r3]
 307 0018 7B68     		ldr	r3, [r7, #4]
 308 001a 1B68     		ldr	r3, [r3]
 309 001c 0121     		movs	r1, #1
 310 001e 8A43     		bics	r2, r1
 311 0020 1A60     		str	r2, [r3]
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Compute the channel index */
 274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #if defined(DMA2)
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if ((uint32_t)(hdma->Instance) < (uint32_t)(DMA2_Channel1))
 312              		.loc 1 275 22
 313 0022 7B68     		ldr	r3, [r7, #4]
 314 0024 1B68     		ldr	r3, [r3]
 315              		.loc 1 275 7
 316 0026 1A00     		movs	r2, r3
 317              		.loc 1 275 6
 318 0028 3C4B     		ldr	r3, .L17
 319 002a 9A42     		cmp	r2, r3
 320 002c 10D8     		bhi	.L14
 276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* DMA1 */
 278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Ch
 321              		.loc 1 278 42
 322 002e 7B68     		ldr	r3, [r7, #4]
 323 0030 1B68     		ldr	r3, [r3]
 324              		.loc 1 278 53
 325 0032 3B4A     		ldr	r2, .L17+4
 326 0034 9446     		mov	ip, r2
 327 0036 6344     		add	r3, r3, ip
 328              		.loc 1 278 80
 329 0038 1421     		movs	r1, #20
 330 003a 1800     		movs	r0, r3
 331 003c FFF7FEFF 		bl	__aeabi_uidiv
 332 0040 0300     		movs	r3, r0
 333              		.loc 1 278 135
 334 0042 9A00     		lsls	r2, r3, #2
 335              		.loc 1 278 24
 336 0044 7B68     		ldr	r3, [r7, #4]
 337 0046 5A64     		str	r2, [r3, #68]
 279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DmaBaseAddress = DMA1;
 338              		.loc 1 279 26
 339 0048 7B68     		ldr	r3, [r7, #4]
 340 004a 364A     		ldr	r2, .L17+8
 341 004c 1A64     		str	r2, [r3, #64]
 342 004e 0FE0     		b	.L15
 343              	.L14:
 280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* DMA2 */
 284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA2_Channel1) / ((uint32_t)DMA2_Ch
 344              		.loc 1 284 42
 345 0050 7B68     		ldr	r3, [r7, #4]
 346 0052 1B68     		ldr	r3, [r3]
 347              		.loc 1 284 53
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 12


 348 0054 344A     		ldr	r2, .L17+12
 349 0056 9446     		mov	ip, r2
 350 0058 6344     		add	r3, r3, ip
 351              		.loc 1 284 80
 352 005a 1421     		movs	r1, #20
 353 005c 1800     		movs	r0, r3
 354 005e FFF7FEFF 		bl	__aeabi_uidiv
 355 0062 0300     		movs	r3, r0
 356              		.loc 1 284 135
 357 0064 9A00     		lsls	r2, r3, #2
 358              		.loc 1 284 24
 359 0066 7B68     		ldr	r3, [r7, #4]
 360 0068 5A64     		str	r2, [r3, #68]
 285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DmaBaseAddress = DMA2;
 361              		.loc 1 285 26
 362 006a 7B68     		ldr	r3, [r7, #4]
 363 006c 2F4A     		ldr	r2, .L17+16
 364 006e 1A64     		str	r2, [r3, #64]
 365              	.L15:
 286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #else
 288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Chan
 289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #endif /* DMA2 */
 290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Reset DMA Channel control register */
 292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->Instance->CCR = 0U;
 366              		.loc 1 292 7
 367 0070 7B68     		ldr	r3, [r7, #4]
 368 0072 1B68     		ldr	r3, [r3]
 369              		.loc 1 292 23
 370 0074 0022     		movs	r2, #0
 371 0076 1A60     		str	r2, [r3]
 293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Clear all flags */
 295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #if defined(DMA2)
 296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex & 0x1CU));
 372              		.loc 1 296 54
 373 0078 7B68     		ldr	r3, [r7, #4]
 374 007a 5B6C     		ldr	r3, [r3, #68]
 375              		.loc 1 296 69
 376 007c 1C22     		movs	r2, #28
 377 007e 1A40     		ands	r2, r3
 378              		.loc 1 296 7
 379 0080 7B68     		ldr	r3, [r7, #4]
 380 0082 1B6C     		ldr	r3, [r3, #64]
 381              		.loc 1 296 46
 382 0084 0121     		movs	r1, #1
 383 0086 9140     		lsls	r1, r1, r2
 384 0088 0A00     		movs	r2, r1
 385              		.loc 1 296 30
 386 008a 5A60     		str	r2, [r3, #4]
 297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #else
 298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_GI1 << (hdma->ChannelIndex & 0x1CU)));
 299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #endif /* DMA2 */
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Initialize parameters for DMAMUX channel :
 302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****      DMAmuxChannel, DMAmuxChannelStatus and DMAmuxChannelStatusMask */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 13


 303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   DMA_CalcDMAMUXChannelBaseAndMask(hdma);
 387              		.loc 1 304 3
 388 008c 7B68     		ldr	r3, [r7, #4]
 389 008e 1800     		movs	r0, r3
 390 0090 FFF7FEFF 		bl	DMA_CalcDMAMUXChannelBaseAndMask
 305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Reset the DMAMUX channel that corresponds to the DMA channel */
 307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxChannel->CCR = 0U;
 391              		.loc 1 307 7
 392 0094 7B68     		ldr	r3, [r7, #4]
 393 0096 9B6C     		ldr	r3, [r3, #72]
 394              		.loc 1 307 28
 395 0098 0022     		movs	r2, #0
 396 009a 1A60     		str	r2, [r3]
 308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Clear the DMAMUX synchro overrun flag */
 310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 397              		.loc 1 310 7
 398 009c 7B68     		ldr	r3, [r7, #4]
 399 009e DB6C     		ldr	r3, [r3, #76]
 400              		.loc 1 310 40
 401 00a0 7A68     		ldr	r2, [r7, #4]
 402 00a2 126D     		ldr	r2, [r2, #80]
 403              		.loc 1 310 34
 404 00a4 5A60     		str	r2, [r3, #4]
 311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Reset Request generator parameters if any */
 313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (((hdma->Init.Request >  0UL) && (hdma->Init.Request <= DMA_REQUEST_GENERATOR3)))
 405              		.loc 1 313 19
 406 00a6 7B68     		ldr	r3, [r7, #4]
 407 00a8 5B68     		ldr	r3, [r3, #4]
 408              		.loc 1 313 6
 409 00aa 002B     		cmp	r3, #0
 410 00ac 10D0     		beq	.L16
 411              		.loc 1 313 50 discriminator 1
 412 00ae 7B68     		ldr	r3, [r7, #4]
 413 00b0 5B68     		ldr	r3, [r3, #4]
 414              		.loc 1 313 36 discriminator 1
 415 00b2 042B     		cmp	r3, #4
 416 00b4 0CD8     		bhi	.L16
 314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Initialize parameters for DMAMUX request generator :
 316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****        DMAmuxRequestGen, DMAmuxRequestGenStatus and DMAmuxRequestGenStatusMask
 317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     */
 318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     DMA_CalcDMAMUXRequestGenBaseAndMask(hdma);
 417              		.loc 1 318 5
 418 00b6 7B68     		ldr	r3, [r7, #4]
 419 00b8 1800     		movs	r0, r3
 420 00ba FFF7FEFF 		bl	DMA_CalcDMAMUXRequestGenBaseAndMask
 319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Reset the DMAMUX request generator register*/
 321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxRequestGen->RGCR = 0U;
 421              		.loc 1 321 9
 422 00be 7B68     		ldr	r3, [r7, #4]
 423 00c0 5B6D     		ldr	r3, [r3, #84]
 424              		.loc 1 321 34
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 14


 425 00c2 0022     		movs	r2, #0
 426 00c4 1A60     		str	r2, [r3]
 322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear the DMAMUX request generator overrun flag */
 324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 427              		.loc 1 324 9
 428 00c6 7B68     		ldr	r3, [r7, #4]
 429 00c8 9B6D     		ldr	r3, [r3, #88]
 430              		.loc 1 324 47
 431 00ca 7A68     		ldr	r2, [r7, #4]
 432 00cc D26D     		ldr	r2, [r2, #92]
 433              		.loc 1 324 41
 434 00ce 5A60     		str	r2, [r3, #4]
 435              	.L16:
 325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxRequestGen = 0U;
 436              		.loc 1 327 26
 437 00d0 7B68     		ldr	r3, [r7, #4]
 438 00d2 0022     		movs	r2, #0
 439 00d4 5A65     		str	r2, [r3, #84]
 328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxRequestGenStatus = 0U;
 440              		.loc 1 328 32
 441 00d6 7B68     		ldr	r3, [r7, #4]
 442 00d8 0022     		movs	r2, #0
 443 00da 9A65     		str	r2, [r3, #88]
 329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxRequestGenStatusMask = 0U;
 444              		.loc 1 329 36
 445 00dc 7B68     		ldr	r3, [r7, #4]
 446 00de 0022     		movs	r2, #0
 447 00e0 DA65     		str	r2, [r3, #92]
 330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Clean callbacks */
 332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->XferCpltCallback = NULL;
 448              		.loc 1 332 26
 449 00e2 7B68     		ldr	r3, [r7, #4]
 450 00e4 0022     		movs	r2, #0
 451 00e6 DA62     		str	r2, [r3, #44]
 333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->XferHalfCpltCallback = NULL;
 452              		.loc 1 333 30
 453 00e8 7B68     		ldr	r3, [r7, #4]
 454 00ea 0022     		movs	r2, #0
 455 00ec 1A63     		str	r2, [r3, #48]
 334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->XferErrorCallback = NULL;
 456              		.loc 1 334 27
 457 00ee 7B68     		ldr	r3, [r7, #4]
 458 00f0 0022     		movs	r2, #0
 459 00f2 5A63     		str	r2, [r3, #52]
 335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->XferAbortCallback = NULL;
 460              		.loc 1 335 27
 461 00f4 7B68     		ldr	r3, [r7, #4]
 462 00f6 0022     		movs	r2, #0
 463 00f8 9A63     		str	r2, [r3, #56]
 336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Initialize the error code */
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 464              		.loc 1 338 19
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 15


 465 00fa 7B68     		ldr	r3, [r7, #4]
 466 00fc 0022     		movs	r2, #0
 467 00fe DA63     		str	r2, [r3, #60]
 339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Initialize the DMA state */
 341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_RESET;
 468              		.loc 1 341 15
 469 0100 7B68     		ldr	r3, [r7, #4]
 470 0102 2522     		movs	r2, #37
 471 0104 0021     		movs	r1, #0
 472 0106 9954     		strb	r1, [r3, r2]
 342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Release Lock */
 344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 473              		.loc 1 344 3
 474 0108 7B68     		ldr	r3, [r7, #4]
 475 010a 2422     		movs	r2, #36
 476 010c 0021     		movs	r1, #0
 477 010e 9954     		strb	r1, [r3, r2]
 345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return HAL_OK;
 478              		.loc 1 346 10
 479 0110 0023     		movs	r3, #0
 480              	.L13:
 347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 481              		.loc 1 347 1
 482 0112 1800     		movs	r0, r3
 483 0114 BD46     		mov	sp, r7
 484 0116 02B0     		add	sp, sp, #8
 485              		@ sp needed
 486 0118 80BD     		pop	{r7, pc}
 487              	.L18:
 488 011a C046     		.align	2
 489              	.L17:
 490 011c 07040240 		.word	1073873927
 491 0120 F8FFFDBF 		.word	-1073872904
 492 0124 00000240 		.word	1073872896
 493 0128 F8FBFDBF 		.word	-1073873928
 494 012c 00040240 		.word	1073873920
 495              		.cfi_endproc
 496              	.LFE364:
 498              		.section	.text.HAL_DMA_Start,"ax",%progbits
 499              		.align	1
 500              		.global	HAL_DMA_Start
 501              		.syntax unified
 502              		.code	16
 503              		.thumb_func
 505              	HAL_DMA_Start:
 506              	.LFB365:
 348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @}
 351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions_Group2 Input and Output operation functions
 354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *  @brief   Input and Output operation functions
 355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 16


 356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** @verbatim
 357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****  ===============================================================================
 358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****                       #####  IO operation functions  #####
 359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****  ===============================================================================
 360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     [..]  This section provides functions allowing to:
 361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       (+) Configure the source, destination address and data length and Start DMA transfer
 362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       (+) Configure the source, destination address and data length and
 363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****           Start DMA transfer with interrupt
 364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       (+) Abort DMA transfer
 365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       (+) Poll for transfer complete
 366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       (+) Handle DMA interrupt request
 367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       (+) Register and Unregister DMA callbacks
 368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** @endverbatim
 370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @{
 371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief Start the DMA Transfer.
 375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *             the configuration information for the specified DMA Channel.
 377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param SrcAddress The source memory Buffer address
 378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param DstAddress The destination memory Buffer address
 379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param DataLength The length of data to be transferred from source to destination
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, 
 383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 507              		.loc 1 383 1
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 24
 510              		@ frame_needed = 1, uses_anonymous_args = 0
 511 0000 80B5     		push	{r7, lr}
 512              	.LCFI6:
 513              		.cfi_def_cfa_offset 8
 514              		.cfi_offset 7, -8
 515              		.cfi_offset 14, -4
 516 0002 86B0     		sub	sp, sp, #24
 517              	.LCFI7:
 518              		.cfi_def_cfa_offset 32
 519 0004 00AF     		add	r7, sp, #0
 520              	.LCFI8:
 521              		.cfi_def_cfa_register 7
 522 0006 F860     		str	r0, [r7, #12]
 523 0008 B960     		str	r1, [r7, #8]
 524 000a 7A60     		str	r2, [r7, #4]
 525 000c 3B60     		str	r3, [r7]
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 526              		.loc 1 384 21
 527 000e 1723     		movs	r3, #23
 528 0010 FB18     		adds	r3, r7, r3
 529 0012 0022     		movs	r2, #0
 530 0014 1A70     		strb	r2, [r3]
 385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the parameters */
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 17


 389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Process locked */
 390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_LOCK(hdma);
 531              		.loc 1 390 3
 532 0016 FB68     		ldr	r3, [r7, #12]
 533 0018 2422     		movs	r2, #36
 534 001a 9B5C     		ldrb	r3, [r3, r2]
 535 001c 012B     		cmp	r3, #1
 536 001e 01D1     		bne	.L20
 537              		.loc 1 390 3 is_stmt 0 discriminator 1
 538 0020 0223     		movs	r3, #2
 539 0022 35E0     		b	.L21
 540              	.L20:
 541              		.loc 1 390 3 discriminator 2
 542 0024 FB68     		ldr	r3, [r7, #12]
 543 0026 2422     		movs	r2, #36
 544 0028 0121     		movs	r1, #1
 545 002a 9954     		strb	r1, [r3, r2]
 391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (hdma->State == HAL_DMA_STATE_READY)
 546              		.loc 1 392 11 is_stmt 1 discriminator 2
 547 002c FB68     		ldr	r3, [r7, #12]
 548 002e 2522     		movs	r2, #37
 549 0030 9B5C     		ldrb	r3, [r3, r2]
 550 0032 DBB2     		uxtb	r3, r3
 551              		.loc 1 392 6 discriminator 2
 552 0034 012B     		cmp	r3, #1
 553 0036 1DD1     		bne	.L22
 393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Change DMA peripheral state */
 395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 554              		.loc 1 395 17
 555 0038 FB68     		ldr	r3, [r7, #12]
 556 003a 2522     		movs	r2, #37
 557 003c 0221     		movs	r1, #2
 558 003e 9954     		strb	r1, [r3, r2]
 396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Initialize the error code */
 398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 559              		.loc 1 398 21
 560 0040 FB68     		ldr	r3, [r7, #12]
 561 0042 0022     		movs	r2, #0
 562 0044 DA63     		str	r2, [r3, #60]
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Disable the peripheral */
 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 563              		.loc 1 401 5
 564 0046 FB68     		ldr	r3, [r7, #12]
 565 0048 1B68     		ldr	r3, [r3]
 566 004a 1A68     		ldr	r2, [r3]
 567 004c FB68     		ldr	r3, [r7, #12]
 568 004e 1B68     		ldr	r3, [r3]
 569 0050 0121     		movs	r1, #1
 570 0052 8A43     		bics	r2, r1
 571 0054 1A60     		str	r2, [r3]
 402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Configure the source, destination address and the data length & clear flags*/
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 18


 572              		.loc 1 404 5
 573 0056 3B68     		ldr	r3, [r7]
 574 0058 7A68     		ldr	r2, [r7, #4]
 575 005a B968     		ldr	r1, [r7, #8]
 576 005c F868     		ldr	r0, [r7, #12]
 577 005e FFF7FEFF 		bl	DMA_SetConfig
 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Enable the Peripheral */
 407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 578              		.loc 1 407 5
 579 0062 FB68     		ldr	r3, [r7, #12]
 580 0064 1B68     		ldr	r3, [r3]
 581 0066 1A68     		ldr	r2, [r3]
 582 0068 FB68     		ldr	r3, [r7, #12]
 583 006a 1B68     		ldr	r3, [r3]
 584 006c 0121     		movs	r1, #1
 585 006e 0A43     		orrs	r2, r1
 586 0070 1A60     		str	r2, [r3]
 587 0072 0AE0     		b	.L23
 588              	.L22:
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Change the error code */
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 589              		.loc 1 412 21
 590 0074 FB68     		ldr	r3, [r7, #12]
 591 0076 8022     		movs	r2, #128
 592 0078 DA63     		str	r2, [r3, #60]
 413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Process Unlocked */
 415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 593              		.loc 1 415 5
 594 007a FB68     		ldr	r3, [r7, #12]
 595 007c 2422     		movs	r2, #36
 596 007e 0021     		movs	r1, #0
 597 0080 9954     		strb	r1, [r3, r2]
 416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Return error status */
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     status = HAL_ERROR;
 598              		.loc 1 418 12
 599 0082 1723     		movs	r3, #23
 600 0084 FB18     		adds	r3, r7, r3
 601 0086 0122     		movs	r2, #1
 602 0088 1A70     		strb	r2, [r3]
 603              	.L23:
 419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return status;
 604              		.loc 1 421 10
 605 008a 1723     		movs	r3, #23
 606 008c FB18     		adds	r3, r7, r3
 607 008e 1B78     		ldrb	r3, [r3]
 608              	.L21:
 422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 609              		.loc 1 422 1
 610 0090 1800     		movs	r0, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 19


 611 0092 BD46     		mov	sp, r7
 612 0094 06B0     		add	sp, sp, #24
 613              		@ sp needed
 614 0096 80BD     		pop	{r7, pc}
 615              		.cfi_endproc
 616              	.LFE365:
 618              		.section	.text.HAL_DMA_Start_IT,"ax",%progbits
 619              		.align	1
 620              		.global	HAL_DMA_Start_IT
 621              		.syntax unified
 622              		.code	16
 623              		.thumb_func
 625              	HAL_DMA_Start_IT:
 626              	.LFB366:
 423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief Start the DMA Transfer with interrupt enabled.
 426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *             the configuration information for the specified DMA Channel.
 428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param SrcAddress The source memory Buffer address
 429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param DstAddress The destination memory Buffer address
 430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param DataLength The length of data to be transferred from source to destination
 431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
 432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddres
 434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****                                    uint32_t DataLength)
 435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 627              		.loc 1 435 1
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 24
 630              		@ frame_needed = 1, uses_anonymous_args = 0
 631 0000 80B5     		push	{r7, lr}
 632              	.LCFI9:
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 7, -8
 635              		.cfi_offset 14, -4
 636 0002 86B0     		sub	sp, sp, #24
 637              	.LCFI10:
 638              		.cfi_def_cfa_offset 32
 639 0004 00AF     		add	r7, sp, #0
 640              	.LCFI11:
 641              		.cfi_def_cfa_register 7
 642 0006 F860     		str	r0, [r7, #12]
 643 0008 B960     		str	r1, [r7, #8]
 644 000a 7A60     		str	r2, [r7, #4]
 645 000c 3B60     		str	r3, [r7]
 436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 646              		.loc 1 436 21
 647 000e 1723     		movs	r3, #23
 648 0010 FB18     		adds	r3, r7, r3
 649 0012 0022     		movs	r2, #0
 650 0014 1A70     		strb	r2, [r3]
 437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the parameters */
 439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Process locked */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 20


 442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_LOCK(hdma);
 651              		.loc 1 442 3
 652 0016 FB68     		ldr	r3, [r7, #12]
 653 0018 2422     		movs	r2, #36
 654 001a 9B5C     		ldrb	r3, [r3, r2]
 655 001c 012B     		cmp	r3, #1
 656 001e 01D1     		bne	.L25
 657              		.loc 1 442 3 is_stmt 0 discriminator 1
 658 0020 0223     		movs	r3, #2
 659 0022 6FE0     		b	.L26
 660              	.L25:
 661              		.loc 1 442 3 discriminator 2
 662 0024 FB68     		ldr	r3, [r7, #12]
 663 0026 2422     		movs	r2, #36
 664 0028 0121     		movs	r1, #1
 665 002a 9954     		strb	r1, [r3, r2]
 443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (hdma->State == HAL_DMA_STATE_READY)
 666              		.loc 1 444 11 is_stmt 1 discriminator 2
 667 002c FB68     		ldr	r3, [r7, #12]
 668 002e 2522     		movs	r2, #37
 669 0030 9B5C     		ldrb	r3, [r3, r2]
 670 0032 DBB2     		uxtb	r3, r3
 671              		.loc 1 444 6 discriminator 2
 672 0034 012B     		cmp	r3, #1
 673 0036 57D1     		bne	.L27
 445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Change DMA peripheral state */
 447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 674              		.loc 1 447 17
 675 0038 FB68     		ldr	r3, [r7, #12]
 676 003a 2522     		movs	r2, #37
 677 003c 0221     		movs	r1, #2
 678 003e 9954     		strb	r1, [r3, r2]
 448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 679              		.loc 1 448 21
 680 0040 FB68     		ldr	r3, [r7, #12]
 681 0042 0022     		movs	r2, #0
 682 0044 DA63     		str	r2, [r3, #60]
 449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Disable the peripheral */
 451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 683              		.loc 1 451 5
 684 0046 FB68     		ldr	r3, [r7, #12]
 685 0048 1B68     		ldr	r3, [r3]
 686 004a 1A68     		ldr	r2, [r3]
 687 004c FB68     		ldr	r3, [r7, #12]
 688 004e 1B68     		ldr	r3, [r3]
 689 0050 0121     		movs	r1, #1
 690 0052 8A43     		bics	r2, r1
 691 0054 1A60     		str	r2, [r3]
 452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Configure the source, destination address and the data length & clear flags*/
 454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 692              		.loc 1 454 5
 693 0056 3B68     		ldr	r3, [r7]
 694 0058 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 21


 695 005a B968     		ldr	r1, [r7, #8]
 696 005c F868     		ldr	r0, [r7, #12]
 697 005e FFF7FEFF 		bl	DMA_SetConfig
 455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Enable the transfer complete interrupt */
 457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Enable the transfer Error interrupt */
 458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if (NULL != hdma->XferHalfCpltCallback)
 698              		.loc 1 458 21
 699 0062 FB68     		ldr	r3, [r7, #12]
 700 0064 1B6B     		ldr	r3, [r3, #48]
 701              		.loc 1 458 8
 702 0066 002B     		cmp	r3, #0
 703 0068 08D0     		beq	.L28
 459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Enable the Half transfer complete interrupt as well */
 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 704              		.loc 1 461 7
 705 006a FB68     		ldr	r3, [r7, #12]
 706 006c 1B68     		ldr	r3, [r3]
 707 006e 1A68     		ldr	r2, [r3]
 708 0070 FB68     		ldr	r3, [r7, #12]
 709 0072 1B68     		ldr	r3, [r3]
 710 0074 0E21     		movs	r1, #14
 711 0076 0A43     		orrs	r2, r1
 712 0078 1A60     		str	r2, [r3]
 713 007a 0FE0     		b	.L29
 714              	.L28:
 462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     else
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 715              		.loc 1 465 7
 716 007c FB68     		ldr	r3, [r7, #12]
 717 007e 1B68     		ldr	r3, [r3]
 718 0080 1A68     		ldr	r2, [r3]
 719 0082 FB68     		ldr	r3, [r7, #12]
 720 0084 1B68     		ldr	r3, [r3]
 721 0086 0421     		movs	r1, #4
 722 0088 8A43     		bics	r2, r1
 723 008a 1A60     		str	r2, [r3]
 466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_TE));
 724              		.loc 1 466 7
 725 008c FB68     		ldr	r3, [r7, #12]
 726 008e 1B68     		ldr	r3, [r3]
 727 0090 1A68     		ldr	r2, [r3]
 728 0092 FB68     		ldr	r3, [r7, #12]
 729 0094 1B68     		ldr	r3, [r3]
 730 0096 0A21     		movs	r1, #10
 731 0098 0A43     		orrs	r2, r1
 732 009a 1A60     		str	r2, [r3]
 733              	.L29:
 467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Check if DMAMUX Synchronization is enabled*/
 470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if ((hdma->DMAmuxChannel->CCR & DMAMUX_CxCR_SE) != 0U)
 734              		.loc 1 470 14
 735 009c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 22


 736 009e 9B6C     		ldr	r3, [r3, #72]
 737              		.loc 1 470 29
 738 00a0 1A68     		ldr	r2, [r3]
 739              		.loc 1 470 35
 740 00a2 8023     		movs	r3, #128
 741 00a4 5B02     		lsls	r3, r3, #9
 742 00a6 1340     		ands	r3, r2
 743              		.loc 1 470 8
 744 00a8 08D0     		beq	.L30
 471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Enable DMAMUX sync overrun IT*/
 473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->DMAmuxChannel->CCR |= DMAMUX_CxCR_SOIE;
 745              		.loc 1 473 11
 746 00aa FB68     		ldr	r3, [r7, #12]
 747 00ac 9B6C     		ldr	r3, [r3, #72]
 748              		.loc 1 473 32
 749 00ae 1A68     		ldr	r2, [r3]
 750              		.loc 1 473 11
 751 00b0 FB68     		ldr	r3, [r7, #12]
 752 00b2 9B6C     		ldr	r3, [r3, #72]
 753              		.loc 1 473 32
 754 00b4 8021     		movs	r1, #128
 755 00b6 4900     		lsls	r1, r1, #1
 756 00b8 0A43     		orrs	r2, r1
 757 00ba 1A60     		str	r2, [r3]
 758              	.L30:
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if (hdma->DMAmuxRequestGen != 0U)
 759              		.loc 1 476 13
 760 00bc FB68     		ldr	r3, [r7, #12]
 761 00be 5B6D     		ldr	r3, [r3, #84]
 762              		.loc 1 476 8
 763 00c0 002B     		cmp	r3, #0
 764 00c2 08D0     		beq	.L31
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* if using DMAMUX request generator, enable the DMAMUX request generator overrun IT*/
 479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* enable the request gen overrun IT*/
 480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->DMAmuxRequestGen->RGCR |= DMAMUX_RGxCR_OIE;
 765              		.loc 1 480 11
 766 00c4 FB68     		ldr	r3, [r7, #12]
 767 00c6 5B6D     		ldr	r3, [r3, #84]
 768              		.loc 1 480 36
 769 00c8 1A68     		ldr	r2, [r3]
 770              		.loc 1 480 11
 771 00ca FB68     		ldr	r3, [r7, #12]
 772 00cc 5B6D     		ldr	r3, [r3, #84]
 773              		.loc 1 480 36
 774 00ce 8021     		movs	r1, #128
 775 00d0 4900     		lsls	r1, r1, #1
 776 00d2 0A43     		orrs	r2, r1
 777 00d4 1A60     		str	r2, [r3]
 778              	.L31:
 481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Enable the Peripheral */
 484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 23


 779              		.loc 1 484 5
 780 00d6 FB68     		ldr	r3, [r7, #12]
 781 00d8 1B68     		ldr	r3, [r3]
 782 00da 1A68     		ldr	r2, [r3]
 783 00dc FB68     		ldr	r3, [r7, #12]
 784 00de 1B68     		ldr	r3, [r3]
 785 00e0 0121     		movs	r1, #1
 786 00e2 0A43     		orrs	r2, r1
 787 00e4 1A60     		str	r2, [r3]
 788 00e6 0AE0     		b	.L32
 789              	.L27:
 485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Change the error code */
 489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 790              		.loc 1 489 21
 791 00e8 FB68     		ldr	r3, [r7, #12]
 792 00ea 8022     		movs	r2, #128
 793 00ec DA63     		str	r2, [r3, #60]
 490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Process Unlocked */
 492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 794              		.loc 1 492 5
 795 00ee FB68     		ldr	r3, [r7, #12]
 796 00f0 2422     		movs	r2, #36
 797 00f2 0021     		movs	r1, #0
 798 00f4 9954     		strb	r1, [r3, r2]
 493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Return error status */
 495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     status = HAL_ERROR;
 799              		.loc 1 495 12
 800 00f6 1723     		movs	r3, #23
 801 00f8 FB18     		adds	r3, r7, r3
 802 00fa 0122     		movs	r2, #1
 803 00fc 1A70     		strb	r2, [r3]
 804              	.L32:
 496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return status;
 805              		.loc 1 498 10
 806 00fe 1723     		movs	r3, #23
 807 0100 FB18     		adds	r3, r7, r3
 808 0102 1B78     		ldrb	r3, [r3]
 809              	.L26:
 499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 810              		.loc 1 499 1
 811 0104 1800     		movs	r0, r3
 812 0106 BD46     		mov	sp, r7
 813 0108 06B0     		add	sp, sp, #24
 814              		@ sp needed
 815 010a 80BD     		pop	{r7, pc}
 816              		.cfi_endproc
 817              	.LFE366:
 819              		.section	.text.HAL_DMA_Abort,"ax",%progbits
 820              		.align	1
 821              		.global	HAL_DMA_Abort
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 24


 822              		.syntax unified
 823              		.code	16
 824              		.thumb_func
 826              	HAL_DMA_Abort:
 827              	.LFB367:
 500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief Abort the DMA Transfer.
 503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *             the configuration information for the specified DMA Channel.
 505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
 506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
 508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 828              		.loc 1 508 1
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 8
 831              		@ frame_needed = 1, uses_anonymous_args = 0
 832 0000 80B5     		push	{r7, lr}
 833              	.LCFI12:
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 82B0     		sub	sp, sp, #8
 838              	.LCFI13:
 839              		.cfi_def_cfa_offset 16
 840 0004 00AF     		add	r7, sp, #0
 841              	.LCFI14:
 842              		.cfi_def_cfa_register 7
 843 0006 7860     		str	r0, [r7, #4]
 509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the DMA peripheral handle */
 510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (NULL == hdma)
 844              		.loc 1 510 6
 845 0008 7B68     		ldr	r3, [r7, #4]
 846 000a 002B     		cmp	r3, #0
 847 000c 01D1     		bne	.L34
 511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     return HAL_ERROR;
 848              		.loc 1 512 12
 849 000e 0123     		movs	r3, #1
 850 0010 4FE0     		b	.L35
 851              	.L34:
 513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check the DMA peripheral state */
 516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (hdma->State != HAL_DMA_STATE_BUSY)
 852              		.loc 1 516 11
 853 0012 7B68     		ldr	r3, [r7, #4]
 854 0014 2522     		movs	r2, #37
 855 0016 9B5C     		ldrb	r3, [r3, r2]
 856 0018 DBB2     		uxtb	r3, r3
 857              		.loc 1 516 6
 858 001a 022B     		cmp	r3, #2
 859 001c 08D0     		beq	.L36
 517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 860              		.loc 1 518 21
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 25


 861 001e 7B68     		ldr	r3, [r7, #4]
 862 0020 0422     		movs	r2, #4
 863 0022 DA63     		str	r2, [r3, #60]
 519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Process Unlocked */
 521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 864              		.loc 1 521 5
 865 0024 7B68     		ldr	r3, [r7, #4]
 866 0026 2422     		movs	r2, #36
 867 0028 0021     		movs	r1, #0
 868 002a 9954     		strb	r1, [r3, r2]
 522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     return HAL_ERROR;
 869              		.loc 1 523 12
 870 002c 0123     		movs	r3, #1
 871 002e 40E0     		b	.L35
 872              	.L36:
 524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Disable DMA IT */
 528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 873              		.loc 1 528 5
 874 0030 7B68     		ldr	r3, [r7, #4]
 875 0032 1B68     		ldr	r3, [r3]
 876 0034 1A68     		ldr	r2, [r3]
 877 0036 7B68     		ldr	r3, [r7, #4]
 878 0038 1B68     		ldr	r3, [r3]
 879 003a 0E21     		movs	r1, #14
 880 003c 8A43     		bics	r2, r1
 881 003e 1A60     		str	r2, [r3]
 529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* disable the DMAMUX sync overrun IT*/
 531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 882              		.loc 1 531 9
 883 0040 7B68     		ldr	r3, [r7, #4]
 884 0042 9B6C     		ldr	r3, [r3, #72]
 885              		.loc 1 531 30
 886 0044 1A68     		ldr	r2, [r3]
 887              		.loc 1 531 9
 888 0046 7B68     		ldr	r3, [r7, #4]
 889 0048 9B6C     		ldr	r3, [r3, #72]
 890              		.loc 1 531 30
 891 004a 1C49     		ldr	r1, .L38
 892 004c 0A40     		ands	r2, r1
 893 004e 1A60     		str	r2, [r3]
 532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Disable the channel */
 534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 894              		.loc 1 534 5
 895 0050 7B68     		ldr	r3, [r7, #4]
 896 0052 1B68     		ldr	r3, [r3]
 897 0054 1A68     		ldr	r2, [r3]
 898 0056 7B68     		ldr	r3, [r7, #4]
 899 0058 1B68     		ldr	r3, [r3]
 900 005a 0121     		movs	r1, #1
 901 005c 8A43     		bics	r2, r1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 26


 902 005e 1A60     		str	r2, [r3]
 535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear all flags */
 537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #if defined(DMA2)
 538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex & 0x1CU));
 903              		.loc 1 538 56
 904 0060 7B68     		ldr	r3, [r7, #4]
 905 0062 5B6C     		ldr	r3, [r3, #68]
 906              		.loc 1 538 71
 907 0064 1C22     		movs	r2, #28
 908 0066 1A40     		ands	r2, r3
 909              		.loc 1 538 9
 910 0068 7B68     		ldr	r3, [r7, #4]
 911 006a 1B6C     		ldr	r3, [r3, #64]
 912              		.loc 1 538 48
 913 006c 0121     		movs	r1, #1
 914 006e 9140     		lsls	r1, r1, r2
 915 0070 0A00     		movs	r2, r1
 916              		.loc 1 538 32
 917 0072 5A60     		str	r2, [r3, #4]
 539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #else
 540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_CLEAR_FLAG(hdma, ((DMA_FLAG_GI1) << (hdma->ChannelIndex  & 0x1CU)));
 541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #endif /* DMA2 */
 542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear the DMAMUX synchro overrun flag */
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 918              		.loc 1 544 9
 919 0074 7B68     		ldr	r3, [r7, #4]
 920 0076 DB6C     		ldr	r3, [r3, #76]
 921              		.loc 1 544 42
 922 0078 7A68     		ldr	r2, [r7, #4]
 923 007a 126D     		ldr	r2, [r2, #80]
 924              		.loc 1 544 36
 925 007c 5A60     		str	r2, [r3, #4]
 545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if (hdma->DMAmuxRequestGen != 0U)
 926              		.loc 1 546 13
 927 007e 7B68     		ldr	r3, [r7, #4]
 928 0080 5B6D     		ldr	r3, [r3, #84]
 929              		.loc 1 546 8
 930 0082 002B     		cmp	r3, #0
 931 0084 0CD0     		beq	.L37
 547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* if using DMAMUX request generator, disable the DMAMUX request generator overrun IT*/
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* disable the request gen overrun IT*/
 550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 932              		.loc 1 550 11
 933 0086 7B68     		ldr	r3, [r7, #4]
 934 0088 5B6D     		ldr	r3, [r3, #84]
 935              		.loc 1 550 36
 936 008a 1A68     		ldr	r2, [r3]
 937              		.loc 1 550 11
 938 008c 7B68     		ldr	r3, [r7, #4]
 939 008e 5B6D     		ldr	r3, [r3, #84]
 940              		.loc 1 550 36
 941 0090 0A49     		ldr	r1, .L38
 942 0092 0A40     		ands	r2, r1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 27


 943 0094 1A60     		str	r2, [r3]
 551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Clear the DMAMUX request generator overrun flag */
 553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 944              		.loc 1 553 11
 945 0096 7B68     		ldr	r3, [r7, #4]
 946 0098 9B6D     		ldr	r3, [r3, #88]
 947              		.loc 1 553 49
 948 009a 7A68     		ldr	r2, [r7, #4]
 949 009c D26D     		ldr	r2, [r2, #92]
 950              		.loc 1 553 43
 951 009e 5A60     		str	r2, [r3, #4]
 952              	.L37:
 554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Change the DMA state */
 557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 953              		.loc 1 557 17
 954 00a0 7B68     		ldr	r3, [r7, #4]
 955 00a2 2522     		movs	r2, #37
 956 00a4 0121     		movs	r1, #1
 957 00a6 9954     		strb	r1, [r3, r2]
 558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Process Unlocked */
 560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 958              		.loc 1 560 5
 959 00a8 7B68     		ldr	r3, [r7, #4]
 960 00aa 2422     		movs	r2, #36
 961 00ac 0021     		movs	r1, #0
 962 00ae 9954     		strb	r1, [r3, r2]
 561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return HAL_OK;
 963              		.loc 1 563 10
 964 00b0 0023     		movs	r3, #0
 965              	.L35:
 564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 966              		.loc 1 564 1
 967 00b2 1800     		movs	r0, r3
 968 00b4 BD46     		mov	sp, r7
 969 00b6 02B0     		add	sp, sp, #8
 970              		@ sp needed
 971 00b8 80BD     		pop	{r7, pc}
 972              	.L39:
 973 00ba C046     		.align	2
 974              	.L38:
 975 00bc FFFEFFFF 		.word	-257
 976              		.cfi_endproc
 977              	.LFE367:
 979              		.section	.text.HAL_DMA_Abort_IT,"ax",%progbits
 980              		.align	1
 981              		.global	HAL_DMA_Abort_IT
 982              		.syntax unified
 983              		.code	16
 984              		.thumb_func
 986              	HAL_DMA_Abort_IT:
 987              	.LFB368:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 28


 565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief Aborts the DMA Transfer in Interrupt mode.
 568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *             the configuration information for the specified DMA Channel.
 570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
 573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 988              		.loc 1 573 1
 989              		.cfi_startproc
 990              		@ args = 0, pretend = 0, frame = 16
 991              		@ frame_needed = 1, uses_anonymous_args = 0
 992 0000 80B5     		push	{r7, lr}
 993              	.LCFI15:
 994              		.cfi_def_cfa_offset 8
 995              		.cfi_offset 7, -8
 996              		.cfi_offset 14, -4
 997 0002 84B0     		sub	sp, sp, #16
 998              	.LCFI16:
 999              		.cfi_def_cfa_offset 24
 1000 0004 00AF     		add	r7, sp, #0
 1001              	.LCFI17:
 1002              		.cfi_def_cfa_register 7
 1003 0006 7860     		str	r0, [r7, #4]
 574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1004              		.loc 1 574 21
 1005 0008 0F21     		movs	r1, #15
 1006 000a 7B18     		adds	r3, r7, r1
 1007 000c 0022     		movs	r2, #0
 1008 000e 1A70     		strb	r2, [r3]
 575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (hdma->State != HAL_DMA_STATE_BUSY)
 1009              		.loc 1 576 11
 1010 0010 7B68     		ldr	r3, [r7, #4]
 1011 0012 2522     		movs	r2, #37
 1012 0014 9B5C     		ldrb	r3, [r3, r2]
 1013 0016 DBB2     		uxtb	r3, r3
 1014              		.loc 1 576 6
 1015 0018 022B     		cmp	r3, #2
 1016 001a 06D0     		beq	.L41
 577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* no transfer ongoing */
 579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 1017              		.loc 1 579 21
 1018 001c 7B68     		ldr	r3, [r7, #4]
 1019 001e 0422     		movs	r2, #4
 1020 0020 DA63     		str	r2, [r3, #60]
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     status = HAL_ERROR;
 1021              		.loc 1 581 12
 1022 0022 7B18     		adds	r3, r7, r1
 1023 0024 0122     		movs	r2, #1
 1024 0026 1A70     		strb	r2, [r3]
 1025 0028 48E0     		b	.L42
 1026              	.L41:
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 29


 583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Disable DMA IT */
 586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 1027              		.loc 1 586 5
 1028 002a 7B68     		ldr	r3, [r7, #4]
 1029 002c 1B68     		ldr	r3, [r3]
 1030 002e 1A68     		ldr	r2, [r3]
 1031 0030 7B68     		ldr	r3, [r7, #4]
 1032 0032 1B68     		ldr	r3, [r3]
 1033 0034 0E21     		movs	r1, #14
 1034 0036 8A43     		bics	r2, r1
 1035 0038 1A60     		str	r2, [r3]
 587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Disable the channel */
 589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 1036              		.loc 1 589 5
 1037 003a 7B68     		ldr	r3, [r7, #4]
 1038 003c 1B68     		ldr	r3, [r3]
 1039 003e 1A68     		ldr	r2, [r3]
 1040 0040 7B68     		ldr	r3, [r7, #4]
 1041 0042 1B68     		ldr	r3, [r3]
 1042 0044 0121     		movs	r1, #1
 1043 0046 8A43     		bics	r2, r1
 1044 0048 1A60     		str	r2, [r3]
 590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* disable the DMAMUX sync overrun IT*/
 592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 1045              		.loc 1 592 9
 1046 004a 7B68     		ldr	r3, [r7, #4]
 1047 004c 9B6C     		ldr	r3, [r3, #72]
 1048              		.loc 1 592 30
 1049 004e 1A68     		ldr	r2, [r3]
 1050              		.loc 1 592 9
 1051 0050 7B68     		ldr	r3, [r7, #4]
 1052 0052 9B6C     		ldr	r3, [r3, #72]
 1053              		.loc 1 592 30
 1054 0054 1D49     		ldr	r1, .L45
 1055 0056 0A40     		ands	r2, r1
 1056 0058 1A60     		str	r2, [r3]
 593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear all flags */
 595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #if defined(DMA2)
 596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex & 0x1CU));
 1057              		.loc 1 596 56
 1058 005a 7B68     		ldr	r3, [r7, #4]
 1059 005c 5B6C     		ldr	r3, [r3, #68]
 1060              		.loc 1 596 71
 1061 005e 1C22     		movs	r2, #28
 1062 0060 1A40     		ands	r2, r3
 1063              		.loc 1 596 9
 1064 0062 7B68     		ldr	r3, [r7, #4]
 1065 0064 1B6C     		ldr	r3, [r3, #64]
 1066              		.loc 1 596 48
 1067 0066 0121     		movs	r1, #1
 1068 0068 9140     		lsls	r1, r1, r2
 1069 006a 0A00     		movs	r2, r1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 30


 1070              		.loc 1 596 32
 1071 006c 5A60     		str	r2, [r3, #4]
 597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #else
 598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_CLEAR_FLAG(hdma, ((DMA_FLAG_GI1) << (hdma->ChannelIndex & 0x1CU)));
 599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #endif /* DMA2 */
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear the DMAMUX synchro overrun flag */
 602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 1072              		.loc 1 602 9
 1073 006e 7B68     		ldr	r3, [r7, #4]
 1074 0070 DB6C     		ldr	r3, [r3, #76]
 1075              		.loc 1 602 42
 1076 0072 7A68     		ldr	r2, [r7, #4]
 1077 0074 126D     		ldr	r2, [r2, #80]
 1078              		.loc 1 602 36
 1079 0076 5A60     		str	r2, [r3, #4]
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if (hdma->DMAmuxRequestGen != 0U)
 1080              		.loc 1 604 13
 1081 0078 7B68     		ldr	r3, [r7, #4]
 1082 007a 5B6D     		ldr	r3, [r3, #84]
 1083              		.loc 1 604 8
 1084 007c 002B     		cmp	r3, #0
 1085 007e 0CD0     		beq	.L43
 605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* if using DMAMUX request generator, disable the DMAMUX request generator overrun IT*/
 607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* disable the request gen overrun IT*/
 608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 1086              		.loc 1 608 11
 1087 0080 7B68     		ldr	r3, [r7, #4]
 1088 0082 5B6D     		ldr	r3, [r3, #84]
 1089              		.loc 1 608 36
 1090 0084 1A68     		ldr	r2, [r3]
 1091              		.loc 1 608 11
 1092 0086 7B68     		ldr	r3, [r7, #4]
 1093 0088 5B6D     		ldr	r3, [r3, #84]
 1094              		.loc 1 608 36
 1095 008a 1049     		ldr	r1, .L45
 1096 008c 0A40     		ands	r2, r1
 1097 008e 1A60     		str	r2, [r3]
 609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Clear the DMAMUX request generator overrun flag */
 611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 1098              		.loc 1 611 11
 1099 0090 7B68     		ldr	r3, [r7, #4]
 1100 0092 9B6D     		ldr	r3, [r3, #88]
 1101              		.loc 1 611 49
 1102 0094 7A68     		ldr	r2, [r7, #4]
 1103 0096 D26D     		ldr	r2, [r2, #92]
 1104              		.loc 1 611 43
 1105 0098 5A60     		str	r2, [r3, #4]
 1106              	.L43:
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Change the DMA state */
 615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 1107              		.loc 1 615 17
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 31


 1108 009a 7B68     		ldr	r3, [r7, #4]
 1109 009c 2522     		movs	r2, #37
 1110 009e 0121     		movs	r1, #1
 1111 00a0 9954     		strb	r1, [r3, r2]
 616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Process Unlocked */
 618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 1112              		.loc 1 618 5
 1113 00a2 7B68     		ldr	r3, [r7, #4]
 1114 00a4 2422     		movs	r2, #36
 1115 00a6 0021     		movs	r1, #0
 1116 00a8 9954     		strb	r1, [r3, r2]
 619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Call User Abort callback */
 621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if (hdma->XferAbortCallback != NULL)
 1117              		.loc 1 621 13
 1118 00aa 7B68     		ldr	r3, [r7, #4]
 1119 00ac 9B6B     		ldr	r3, [r3, #56]
 1120              		.loc 1 621 8
 1121 00ae 002B     		cmp	r3, #0
 1122 00b0 04D0     		beq	.L42
 622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->XferAbortCallback(hdma);
 1123              		.loc 1 623 11
 1124 00b2 7B68     		ldr	r3, [r7, #4]
 1125 00b4 9B6B     		ldr	r3, [r3, #56]
 1126              		.loc 1 623 7
 1127 00b6 7A68     		ldr	r2, [r7, #4]
 1128 00b8 1000     		movs	r0, r2
 1129 00ba 9847     		blx	r3
 1130              	.LVL0:
 1131              	.L42:
 624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return status;
 1132              		.loc 1 626 10
 1133 00bc 0F23     		movs	r3, #15
 1134 00be FB18     		adds	r3, r7, r3
 1135 00c0 1B78     		ldrb	r3, [r3]
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 1136              		.loc 1 627 1
 1137 00c2 1800     		movs	r0, r3
 1138 00c4 BD46     		mov	sp, r7
 1139 00c6 04B0     		add	sp, sp, #16
 1140              		@ sp needed
 1141 00c8 80BD     		pop	{r7, pc}
 1142              	.L46:
 1143 00ca C046     		.align	2
 1144              	.L45:
 1145 00cc FFFEFFFF 		.word	-257
 1146              		.cfi_endproc
 1147              	.LFE368:
 1149              		.section	.text.HAL_DMA_PollForTransfer,"ax",%progbits
 1150              		.align	1
 1151              		.global	HAL_DMA_PollForTransfer
 1152              		.syntax unified
 1153              		.code	16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 32


 1154              		.thumb_func
 1156              	HAL_DMA_PollForTransfer:
 1157              	.LFB369:
 628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief Polling for transfer complete.
 631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *             the configuration information for the specified DMA Channel.
 633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param CompleteLevel Specifies the DMA level complete.
 634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param Timeout Timeout duration.
 635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
 636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, HAL_DMA_LevelCompleteTypeDef Com
 638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****                                           uint32_t Timeout)
 639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 1158              		.loc 1 639 1
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 24
 1161              		@ frame_needed = 1, uses_anonymous_args = 0
 1162 0000 80B5     		push	{r7, lr}
 1163              	.LCFI18:
 1164              		.cfi_def_cfa_offset 8
 1165              		.cfi_offset 7, -8
 1166              		.cfi_offset 14, -4
 1167 0002 86B0     		sub	sp, sp, #24
 1168              	.LCFI19:
 1169              		.cfi_def_cfa_offset 32
 1170 0004 00AF     		add	r7, sp, #0
 1171              	.LCFI20:
 1172              		.cfi_def_cfa_register 7
 1173 0006 F860     		str	r0, [r7, #12]
 1174 0008 7A60     		str	r2, [r7, #4]
 1175 000a 0B23     		movs	r3, #11
 1176 000c FB18     		adds	r3, r7, r3
 1177 000e 0A1C     		adds	r2, r1, #0
 1178 0010 1A70     		strb	r2, [r3]
 640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   uint32_t temp;
 641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   uint32_t tickstart;
 642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (hdma->State != HAL_DMA_STATE_BUSY)
 1179              		.loc 1 643 11
 1180 0012 FB68     		ldr	r3, [r7, #12]
 1181 0014 2522     		movs	r2, #37
 1182 0016 9B5C     		ldrb	r3, [r3, r2]
 1183 0018 DBB2     		uxtb	r3, r3
 1184              		.loc 1 643 6
 1185 001a 022B     		cmp	r3, #2
 1186 001c 08D0     		beq	.L48
 644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* no transfer ongoing */
 646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 1187              		.loc 1 646 21
 1188 001e FB68     		ldr	r3, [r7, #12]
 1189 0020 0422     		movs	r2, #4
 1190 0022 DA63     		str	r2, [r3, #60]
 647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 1191              		.loc 1 647 5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 33


 1192 0024 FB68     		ldr	r3, [r7, #12]
 1193 0026 2422     		movs	r2, #36
 1194 0028 0021     		movs	r1, #0
 1195 002a 9954     		strb	r1, [r3, r2]
 648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     return HAL_ERROR;
 1196              		.loc 1 648 12
 1197 002c 0123     		movs	r3, #1
 1198 002e C0E0     		b	.L49
 1199              	.L48:
 649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Polling mode not supported in circular mode */
 652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != 0U)
 1200              		.loc 1 652 12
 1201 0030 FB68     		ldr	r3, [r7, #12]
 1202 0032 1B68     		ldr	r3, [r3]
 1203              		.loc 1 652 22
 1204 0034 1B68     		ldr	r3, [r3]
 1205              		.loc 1 652 28
 1206 0036 2022     		movs	r2, #32
 1207 0038 1340     		ands	r3, r2
 1208              		.loc 1 652 6
 1209 003a 05D0     		beq	.L50
 653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
 1210              		.loc 1 654 21
 1211 003c FB68     		ldr	r3, [r7, #12]
 1212 003e 8022     		movs	r2, #128
 1213 0040 5200     		lsls	r2, r2, #1
 1214 0042 DA63     		str	r2, [r3, #60]
 655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     return HAL_ERROR;
 1215              		.loc 1 655 12
 1216 0044 0123     		movs	r3, #1
 1217 0046 B4E0     		b	.L49
 1218              	.L50:
 656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Get the level transfer complete flag */
 659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (HAL_DMA_FULL_TRANSFER == CompleteLevel)
 1219              		.loc 1 659 6
 1220 0048 0B23     		movs	r3, #11
 1221 004a FB18     		adds	r3, r7, r3
 1222 004c 1B78     		ldrb	r3, [r3]
 1223 004e 002B     		cmp	r3, #0
 1224 0050 08D1     		bne	.L51
 660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Transfer Complete flag */
 662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     temp = DMA_FLAG_TC1 << (hdma->ChannelIndex & 0x1CU);
 1225              		.loc 1 662 33
 1226 0052 FB68     		ldr	r3, [r7, #12]
 1227 0054 5B6C     		ldr	r3, [r3, #68]
 1228              		.loc 1 662 48
 1229 0056 1C22     		movs	r2, #28
 1230 0058 1340     		ands	r3, r2
 1231              		.loc 1 662 10
 1232 005a 0222     		movs	r2, #2
 1233 005c 9A40     		lsls	r2, r2, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 34


 1234 005e 1300     		movs	r3, r2
 1235 0060 7B61     		str	r3, [r7, #20]
 1236 0062 07E0     		b	.L52
 1237              	.L51:
 663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Half Transfer Complete flag */
 667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     temp = DMA_FLAG_HT1 << (hdma->ChannelIndex & 0x1CU);
 1238              		.loc 1 667 33
 1239 0064 FB68     		ldr	r3, [r7, #12]
 1240 0066 5B6C     		ldr	r3, [r3, #68]
 1241              		.loc 1 667 48
 1242 0068 1C22     		movs	r2, #28
 1243 006a 1340     		ands	r3, r2
 1244              		.loc 1 667 10
 1245 006c 0422     		movs	r2, #4
 1246 006e 9A40     		lsls	r2, r2, r3
 1247 0070 1300     		movs	r3, r2
 1248 0072 7B61     		str	r3, [r7, #20]
 1249              	.L52:
 668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Get tick */
 671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   tickstart = HAL_GetTick();
 1250              		.loc 1 671 15
 1251 0074 FFF7FEFF 		bl	HAL_GetTick
 1252 0078 0300     		movs	r3, r0
 1253 007a 3B61     		str	r3, [r7, #16]
 672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #if defined(DMA2)
 674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   while ((hdma->DmaBaseAddress->ISR & temp) == 0U)
 1254              		.loc 1 674 9
 1255 007c 3DE0     		b	.L53
 1256              	.L56:
 675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if ((hdma->DmaBaseAddress->ISR & (DMA_FLAG_TE1 << (hdma->ChannelIndex & 0x1CU))) != 0U)
 1257              		.loc 1 676 14
 1258 007e FB68     		ldr	r3, [r7, #12]
 1259 0080 1B6C     		ldr	r3, [r3, #64]
 1260              		.loc 1 676 30
 1261 0082 1A68     		ldr	r2, [r3]
 1262              		.loc 1 676 60
 1263 0084 FB68     		ldr	r3, [r7, #12]
 1264 0086 5B6C     		ldr	r3, [r3, #68]
 1265              		.loc 1 676 75
 1266 0088 1C21     		movs	r1, #28
 1267 008a 0B40     		ands	r3, r1
 1268              		.loc 1 676 52
 1269 008c 0821     		movs	r1, #8
 1270 008e 9940     		lsls	r1, r1, r3
 1271 0090 0B00     		movs	r3, r1
 1272              		.loc 1 676 36
 1273 0092 1340     		ands	r3, r2
 1274              		.loc 1 676 8
 1275 0094 16D0     		beq	.L54
 677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 35


 678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* When a DMA transfer error occurs */
 679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* A hardware clear of its EN bits is performed */
 680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Clear all flags */
 681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex & 0x1CU));
 1276              		.loc 1 681 58
 1277 0096 FB68     		ldr	r3, [r7, #12]
 1278 0098 5B6C     		ldr	r3, [r3, #68]
 1279              		.loc 1 681 73
 1280 009a 1C22     		movs	r2, #28
 1281 009c 1A40     		ands	r2, r3
 1282              		.loc 1 681 11
 1283 009e FB68     		ldr	r3, [r7, #12]
 1284 00a0 1B6C     		ldr	r3, [r3, #64]
 1285              		.loc 1 681 50
 1286 00a2 0121     		movs	r1, #1
 1287 00a4 9140     		lsls	r1, r1, r2
 1288 00a6 0A00     		movs	r2, r1
 1289              		.loc 1 681 34
 1290 00a8 5A60     		str	r2, [r3, #4]
 682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Update error code */
 684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->ErrorCode = HAL_DMA_ERROR_TE;
 1291              		.loc 1 684 23
 1292 00aa FB68     		ldr	r3, [r7, #12]
 1293 00ac 0122     		movs	r2, #1
 1294 00ae DA63     		str	r2, [r3, #60]
 685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Change the DMA state */
 687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_READY;
 1295              		.loc 1 687 19
 1296 00b0 FB68     		ldr	r3, [r7, #12]
 1297 00b2 2522     		movs	r2, #37
 1298 00b4 0121     		movs	r1, #1
 1299 00b6 9954     		strb	r1, [r3, r2]
 688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Process Unlocked */
 690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 1300              		.loc 1 690 7
 1301 00b8 FB68     		ldr	r3, [r7, #12]
 1302 00ba 2422     		movs	r2, #36
 1303 00bc 0021     		movs	r1, #0
 1304 00be 9954     		strb	r1, [r3, r2]
 691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       return HAL_ERROR;
 1305              		.loc 1 692 14
 1306 00c0 0123     		movs	r3, #1
 1307 00c2 76E0     		b	.L49
 1308              	.L54:
 693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #else
 695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   while (0U == __HAL_DMA_GET_FLAG(hdma, temp))
 696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if (0U != __HAL_DMA_GET_FLAG(hdma, (DMA_FLAG_TE1 << (hdma->ChannelIndex & 0x1CU))))
 698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* When a DMA transfer error occurs */
 700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* A hardware clear of its EN bits is performed */
 701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Clear all flags */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 36


 702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       __HAL_DMA_CLEAR_FLAG(hdma, ((DMA_FLAG_GI1) << (hdma->ChannelIndex & 0x1CU)));
 703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Update error code */
 705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->ErrorCode = HAL_DMA_ERROR_TE;
 706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Change the DMA state */
 708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_READY;
 709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Process Unlocked */
 711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       return HAL_ERROR;
 714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #endif /* DMA2 */
 716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Check for the Timeout */
 717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if (Timeout != HAL_MAX_DELAY)
 1309              		.loc 1 717 8
 1310 00c4 7B68     		ldr	r3, [r7, #4]
 1311 00c6 0133     		adds	r3, r3, #1
 1312 00c8 17D0     		beq	.L53
 718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 1313              		.loc 1 719 13
 1314 00ca FFF7FEFF 		bl	HAL_GetTick
 1315 00ce 0200     		movs	r2, r0
 1316              		.loc 1 719 27
 1317 00d0 3B69     		ldr	r3, [r7, #16]
 1318 00d2 D31A     		subs	r3, r2, r3
 1319              		.loc 1 719 10
 1320 00d4 7A68     		ldr	r2, [r7, #4]
 1321 00d6 9A42     		cmp	r2, r3
 1322 00d8 02D3     		bcc	.L55
 1323              		.loc 1 719 51 discriminator 1
 1324 00da 7B68     		ldr	r3, [r7, #4]
 1325 00dc 002B     		cmp	r3, #0
 1326 00de 0CD1     		bne	.L53
 1327              	.L55:
 720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       {
 721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         /* Update error code */
 722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 1328              		.loc 1 722 25
 1329 00e0 FB68     		ldr	r3, [r7, #12]
 1330 00e2 2022     		movs	r2, #32
 1331 00e4 DA63     		str	r2, [r3, #60]
 723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         /* Change the DMA state */
 725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 1332              		.loc 1 725 21
 1333 00e6 FB68     		ldr	r3, [r7, #12]
 1334 00e8 2522     		movs	r2, #37
 1335 00ea 0121     		movs	r1, #1
 1336 00ec 9954     		strb	r1, [r3, r2]
 726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         /* Process Unlocked */
 728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 1337              		.loc 1 728 9
 1338 00ee FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 37


 1339 00f0 2422     		movs	r2, #36
 1340 00f2 0021     		movs	r1, #0
 1341 00f4 9954     		strb	r1, [r3, r2]
 729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         return HAL_ERROR;
 1342              		.loc 1 730 16
 1343 00f6 0123     		movs	r3, #1
 1344 00f8 5BE0     		b	.L49
 1345              	.L53:
 674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 1346              		.loc 1 674 15
 1347 00fa FB68     		ldr	r3, [r7, #12]
 1348 00fc 1B6C     		ldr	r3, [r3, #64]
 674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 1349              		.loc 1 674 31
 1350 00fe 1B68     		ldr	r3, [r3]
 674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 1351              		.loc 1 674 37
 1352 0100 7A69     		ldr	r2, [r7, #20]
 1353 0102 1340     		ands	r3, r2
 674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 1354              		.loc 1 674 9
 1355 0104 BBD0     		beq	.L56
 731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       }
 732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /*Check for DMAMUX Request generator (if used) overrun status */
 736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (hdma->DMAmuxRequestGen != 0U)
 1356              		.loc 1 736 11
 1357 0106 FB68     		ldr	r3, [r7, #12]
 1358 0108 5B6D     		ldr	r3, [r3, #84]
 1359              		.loc 1 736 6
 1360 010a 002B     		cmp	r3, #0
 1361 010c 1BD0     		beq	.L57
 737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* if using DMAMUX request generator Check for DMAMUX request generator overrun */
 739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if ((hdma->DMAmuxRequestGenStatus->RGSR & hdma->DMAmuxRequestGenStatusMask) != 0U)
 1362              		.loc 1 739 14
 1363 010e FB68     		ldr	r3, [r7, #12]
 1364 0110 9B6D     		ldr	r3, [r3, #88]
 1365              		.loc 1 739 38
 1366 0112 1A68     		ldr	r2, [r3]
 1367              		.loc 1 739 51
 1368 0114 FB68     		ldr	r3, [r7, #12]
 1369 0116 DB6D     		ldr	r3, [r3, #92]
 1370              		.loc 1 739 45
 1371 0118 1340     		ands	r3, r2
 1372              		.loc 1 739 8
 1373 011a 14D0     		beq	.L57
 740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Disable the request gen overrun interrupt */
 742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->DMAmuxRequestGen->RGCR |= DMAMUX_RGxCR_OIE;
 1374              		.loc 1 742 11
 1375 011c FB68     		ldr	r3, [r7, #12]
 1376 011e 5B6D     		ldr	r3, [r3, #84]
 1377              		.loc 1 742 36
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 38


 1378 0120 1A68     		ldr	r2, [r3]
 1379              		.loc 1 742 11
 1380 0122 FB68     		ldr	r3, [r7, #12]
 1381 0124 5B6D     		ldr	r3, [r3, #84]
 1382              		.loc 1 742 36
 1383 0126 8021     		movs	r1, #128
 1384 0128 4900     		lsls	r1, r1, #1
 1385 012a 0A43     		orrs	r2, r1
 1386 012c 1A60     		str	r2, [r3]
 743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Clear the DMAMUX request generator overrun flag */
 745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 1387              		.loc 1 745 11
 1388 012e FB68     		ldr	r3, [r7, #12]
 1389 0130 9B6D     		ldr	r3, [r3, #88]
 1390              		.loc 1 745 49
 1391 0132 FA68     		ldr	r2, [r7, #12]
 1392 0134 D26D     		ldr	r2, [r2, #92]
 1393              		.loc 1 745 43
 1394 0136 5A60     		str	r2, [r3, #4]
 746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Update error code */
 748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_REQGEN;
 1395              		.loc 1 748 23
 1396 0138 FB68     		ldr	r3, [r7, #12]
 1397 013a DB6B     		ldr	r3, [r3, #60]
 1398 013c 8022     		movs	r2, #128
 1399 013e D200     		lsls	r2, r2, #3
 1400 0140 1A43     		orrs	r2, r3
 1401 0142 FB68     		ldr	r3, [r7, #12]
 1402 0144 DA63     		str	r2, [r3, #60]
 1403              	.L57:
 749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Check for DMAMUX Synchronization overrun */
 753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if ((hdma->DMAmuxChannelStatus->CSR & hdma->DMAmuxChannelStatusMask) != 0U)
 1404              		.loc 1 753 12
 1405 0146 FB68     		ldr	r3, [r7, #12]
 1406 0148 DB6C     		ldr	r3, [r3, #76]
 1407              		.loc 1 753 33
 1408 014a 1A68     		ldr	r2, [r3]
 1409              		.loc 1 753 45
 1410 014c FB68     		ldr	r3, [r7, #12]
 1411 014e 1B6D     		ldr	r3, [r3, #80]
 1412              		.loc 1 753 39
 1413 0150 1340     		ands	r3, r2
 1414              		.loc 1 753 6
 1415 0152 0BD0     		beq	.L58
 754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear the DMAMUX synchro overrun flag */
 756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 1416              		.loc 1 756 9
 1417 0154 FB68     		ldr	r3, [r7, #12]
 1418 0156 DB6C     		ldr	r3, [r3, #76]
 1419              		.loc 1 756 42
 1420 0158 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 39


 1421 015a 126D     		ldr	r2, [r2, #80]
 1422              		.loc 1 756 36
 1423 015c 5A60     		str	r2, [r3, #4]
 757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Update error code */
 759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode |= HAL_DMA_ERROR_SYNC;
 1424              		.loc 1 759 21
 1425 015e FB68     		ldr	r3, [r7, #12]
 1426 0160 DB6B     		ldr	r3, [r3, #60]
 1427 0162 8022     		movs	r2, #128
 1428 0164 9200     		lsls	r2, r2, #2
 1429 0166 1A43     		orrs	r2, r3
 1430 0168 FB68     		ldr	r3, [r7, #12]
 1431 016a DA63     		str	r2, [r3, #60]
 1432              	.L58:
 760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (HAL_DMA_FULL_TRANSFER == CompleteLevel)
 1433              		.loc 1 762 6
 1434 016c 0B23     		movs	r3, #11
 1435 016e FB18     		adds	r3, r7, r3
 1436 0170 1B78     		ldrb	r3, [r3]
 1437 0172 002B     		cmp	r3, #0
 1438 0174 12D1     		bne	.L59
 763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear the transfer complete flag */
 765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #if defined(DMA2)
 766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DmaBaseAddress->IFCR = (DMA_FLAG_TC1 << (hdma->ChannelIndex & 0x1CU));
 1439              		.loc 1 766 56
 1440 0176 FB68     		ldr	r3, [r7, #12]
 1441 0178 5B6C     		ldr	r3, [r3, #68]
 1442              		.loc 1 766 71
 1443 017a 1C22     		movs	r2, #28
 1444 017c 1A40     		ands	r2, r3
 1445              		.loc 1 766 9
 1446 017e FB68     		ldr	r3, [r7, #12]
 1447 0180 1B6C     		ldr	r3, [r3, #64]
 1448              		.loc 1 766 48
 1449 0182 0221     		movs	r1, #2
 1450 0184 9140     		lsls	r1, r1, r2
 1451 0186 0A00     		movs	r2, r1
 1452              		.loc 1 766 32
 1453 0188 5A60     		str	r2, [r3, #4]
 767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #else
 768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC1 << (hdma->ChannelIndex & 0x1CU)));
 769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #endif /* DMA2 */
 770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Process unlocked */
 772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 1454              		.loc 1 772 5
 1455 018a FB68     		ldr	r3, [r7, #12]
 1456 018c 2422     		movs	r2, #36
 1457 018e 0021     		movs	r1, #0
 1458 0190 9954     		strb	r1, [r3, r2]
 773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* The selected Channelx EN bit is cleared (DMA is disabled and
 775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     all transfers are complete) */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 40


 776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 1459              		.loc 1 776 17
 1460 0192 FB68     		ldr	r3, [r7, #12]
 1461 0194 2522     		movs	r2, #37
 1462 0196 0121     		movs	r1, #1
 1463 0198 9954     		strb	r1, [r3, r2]
 1464 019a 09E0     		b	.L60
 1465              	.L59:
 777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear the half transfer complete flag */
 781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #if defined(DMA2)
 782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DmaBaseAddress->IFCR = (DMA_FLAG_HT1 << (hdma->ChannelIndex & 0x1CU));
 1466              		.loc 1 782 56
 1467 019c FB68     		ldr	r3, [r7, #12]
 1468 019e 5B6C     		ldr	r3, [r3, #68]
 1469              		.loc 1 782 71
 1470 01a0 1C22     		movs	r2, #28
 1471 01a2 1A40     		ands	r2, r3
 1472              		.loc 1 782 9
 1473 01a4 FB68     		ldr	r3, [r7, #12]
 1474 01a6 1B6C     		ldr	r3, [r3, #64]
 1475              		.loc 1 782 48
 1476 01a8 0421     		movs	r1, #4
 1477 01aa 9140     		lsls	r1, r1, r2
 1478 01ac 0A00     		movs	r2, r1
 1479              		.loc 1 782 32
 1480 01ae 5A60     		str	r2, [r3, #4]
 1481              	.L60:
 783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #else
 784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_HT1 << (hdma->ChannelIndex & 0x1CU)));
 785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #endif /* DMA2 */
 786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return HAL_OK;
 1482              		.loc 1 788 10
 1483 01b0 0023     		movs	r3, #0
 1484              	.L49:
 789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 1485              		.loc 1 789 1
 1486 01b2 1800     		movs	r0, r3
 1487 01b4 BD46     		mov	sp, r7
 1488 01b6 06B0     		add	sp, sp, #24
 1489              		@ sp needed
 1490 01b8 80BD     		pop	{r7, pc}
 1491              		.cfi_endproc
 1492              	.LFE369:
 1494              		.section	.text.HAL_DMA_IRQHandler,"ax",%progbits
 1495              		.align	1
 1496              		.global	HAL_DMA_IRQHandler
 1497              		.syntax unified
 1498              		.code	16
 1499              		.thumb_func
 1501              	HAL_DMA_IRQHandler:
 1502              	.LFB370:
 790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 41


 791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief Handle DMA interrupt request.
 793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *             the configuration information for the specified DMA Channel.
 795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval None
 796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
 798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 1503              		.loc 1 798 1
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 16
 1506              		@ frame_needed = 1, uses_anonymous_args = 0
 1507 0000 80B5     		push	{r7, lr}
 1508              	.LCFI21:
 1509              		.cfi_def_cfa_offset 8
 1510              		.cfi_offset 7, -8
 1511              		.cfi_offset 14, -4
 1512 0002 84B0     		sub	sp, sp, #16
 1513              	.LCFI22:
 1514              		.cfi_def_cfa_offset 24
 1515 0004 00AF     		add	r7, sp, #0
 1516              	.LCFI23:
 1517              		.cfi_def_cfa_register 7
 1518 0006 7860     		str	r0, [r7, #4]
 799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #if defined(DMA2)
 800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   uint32_t flag_it = hdma->DmaBaseAddress->ISR;
 1519              		.loc 1 800 26
 1520 0008 7B68     		ldr	r3, [r7, #4]
 1521 000a 1B6C     		ldr	r3, [r3, #64]
 1522              		.loc 1 800 12
 1523 000c 1B68     		ldr	r3, [r3]
 1524 000e FB60     		str	r3, [r7, #12]
 801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #else
 802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   uint32_t flag_it = DMA1->ISR;
 803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #endif /* DMA2 */
 804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   uint32_t source_it = hdma->Instance->CCR;
 1525              		.loc 1 804 28
 1526 0010 7B68     		ldr	r3, [r7, #4]
 1527 0012 1B68     		ldr	r3, [r3]
 1528              		.loc 1 804 12
 1529 0014 1B68     		ldr	r3, [r3]
 1530 0016 BB60     		str	r3, [r7, #8]
 805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Half Transfer Complete Interrupt management ******************************/
 807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (((flag_it & (DMA_FLAG_HT1 << (hdma->ChannelIndex & 0x1CU))) != 0U) && ((source_it & DMA_IT_HT
 1531              		.loc 1 807 41
 1532 0018 7B68     		ldr	r3, [r7, #4]
 1533 001a 5B6C     		ldr	r3, [r3, #68]
 1534              		.loc 1 807 56
 1535 001c 1C22     		movs	r2, #28
 1536 001e 1340     		ands	r3, r2
 1537              		.loc 1 807 33
 1538 0020 0422     		movs	r2, #4
 1539 0022 9A40     		lsls	r2, r2, r3
 1540 0024 1300     		movs	r3, r2
 1541              		.loc 1 807 17
 1542 0026 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 42


 1543 0028 1340     		ands	r3, r2
 1544              		.loc 1 807 6
 1545 002a 26D0     		beq	.L62
 1546              		.loc 1 807 89 discriminator 1
 1547 002c BB68     		ldr	r3, [r7, #8]
 1548 002e 0422     		movs	r2, #4
 1549 0030 1340     		ands	r3, r2
 1550              		.loc 1 807 74 discriminator 1
 1551 0032 22D0     		beq	.L62
 808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
 810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 1552              		.loc 1 810 16
 1553 0034 7B68     		ldr	r3, [r7, #4]
 1554 0036 1B68     		ldr	r3, [r3]
 1555              		.loc 1 810 26
 1556 0038 1B68     		ldr	r3, [r3]
 1557              		.loc 1 810 32
 1558 003a 2022     		movs	r2, #32
 1559 003c 1340     		ands	r3, r2
 1560              		.loc 1 810 10
 1561 003e 07D1     		bne	.L63
 811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       {
 812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         /* Disable the half transfer interrupt */
 813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 1562              		.loc 1 813 9
 1563 0040 7B68     		ldr	r3, [r7, #4]
 1564 0042 1B68     		ldr	r3, [r3]
 1565 0044 1A68     		ldr	r2, [r3]
 1566 0046 7B68     		ldr	r3, [r7, #4]
 1567 0048 1B68     		ldr	r3, [r3]
 1568 004a 0421     		movs	r1, #4
 1569 004c 8A43     		bics	r2, r1
 1570 004e 1A60     		str	r2, [r3]
 1571              	.L63:
 814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       }
 815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Clear the half transfer complete flag */
 816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #if defined(DMA2)
 817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->DmaBaseAddress->IFCR = DMA_ISR_HTIF1 << (hdma->ChannelIndex & 0x1CU);
 1572              		.loc 1 817 58
 1573 0050 7B68     		ldr	r3, [r7, #4]
 1574 0052 5B6C     		ldr	r3, [r3, #68]
 1575              		.loc 1 817 73
 1576 0054 1C22     		movs	r2, #28
 1577 0056 1A40     		ands	r2, r3
 1578              		.loc 1 817 11
 1579 0058 7B68     		ldr	r3, [r7, #4]
 1580 005a 1B6C     		ldr	r3, [r3, #64]
 1581              		.loc 1 817 50
 1582 005c 0421     		movs	r1, #4
 1583 005e 9140     		lsls	r1, r1, r2
 1584 0060 0A00     		movs	r2, r1
 1585              		.loc 1 817 34
 1586 0062 5A60     		str	r2, [r3, #4]
 818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #else
 819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_HT1 << (hdma->ChannelIndex & 0x1CU)));
 820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #endif /* DMA2 */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 43


 821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* DMA peripheral state is not updated in Half Transfer */
 823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* but in Transfer Complete case */
 824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       if (hdma->XferHalfCpltCallback != NULL)
 1587              		.loc 1 825 15
 1588 0064 7B68     		ldr	r3, [r7, #4]
 1589 0066 1B6B     		ldr	r3, [r3, #48]
 1590              		.loc 1 825 10
 1591 0068 002B     		cmp	r3, #0
 1592 006a 00D1     		bne	.LCB1264
 1593 006c 80E0     		b	.L65	@long jump
 1594              	.LCB1264:
 826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       {
 827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         /* Half transfer callback */
 828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferHalfCpltCallback(hdma);
 1595              		.loc 1 828 13
 1596 006e 7B68     		ldr	r3, [r7, #4]
 1597 0070 1B6B     		ldr	r3, [r3, #48]
 1598              		.loc 1 828 9
 1599 0072 7A68     		ldr	r2, [r7, #4]
 1600 0074 1000     		movs	r0, r2
 1601 0076 9847     		blx	r3
 1602              	.LVL1:
 825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       {
 1603              		.loc 1 825 10
 1604 0078 7AE0     		b	.L65
 1605              	.L62:
 829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       }
 830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Transfer Complete Interrupt management ***********************************/
 833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else if ((0U != (flag_it & (DMA_FLAG_TC1 << (hdma->ChannelIndex & 0x1CU)))) && (0U != (source_it 
 1606              		.loc 1 833 52
 1607 007a 7B68     		ldr	r3, [r7, #4]
 1608 007c 5B6C     		ldr	r3, [r3, #68]
 1609              		.loc 1 833 67
 1610 007e 1C22     		movs	r2, #28
 1611 0080 1340     		ands	r3, r2
 1612              		.loc 1 833 44
 1613 0082 0222     		movs	r2, #2
 1614 0084 9A40     		lsls	r2, r2, r3
 1615 0086 1300     		movs	r3, r2
 1616              		.loc 1 833 28
 1617 0088 FA68     		ldr	r2, [r7, #12]
 1618 008a 1340     		ands	r3, r2
 1619              		.loc 1 833 11
 1620 008c 3CD0     		beq	.L66
 1621              		.loc 1 833 100 discriminator 1
 1622 008e BB68     		ldr	r3, [r7, #8]
 1623 0090 0222     		movs	r2, #2
 1624 0092 1340     		ands	r3, r2
 1625              		.loc 1 833 79 discriminator 1
 1626 0094 38D0     		beq	.L66
 834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 1627              		.loc 1 835 16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 44


 1628 0096 7B68     		ldr	r3, [r7, #4]
 1629 0098 1B68     		ldr	r3, [r3]
 1630              		.loc 1 835 26
 1631 009a 1B68     		ldr	r3, [r3]
 1632              		.loc 1 835 32
 1633 009c 2022     		movs	r2, #32
 1634 009e 1340     		ands	r3, r2
 1635              		.loc 1 835 10
 1636 00a0 0BD1     		bne	.L67
 836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       {
 837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         /* Disable the transfer complete and error interrupt */
 838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TE | DMA_IT_TC);
 1637              		.loc 1 838 9
 1638 00a2 7B68     		ldr	r3, [r7, #4]
 1639 00a4 1B68     		ldr	r3, [r3]
 1640 00a6 1A68     		ldr	r2, [r3]
 1641 00a8 7B68     		ldr	r3, [r7, #4]
 1642 00aa 1B68     		ldr	r3, [r3]
 1643 00ac 0A21     		movs	r1, #10
 1644 00ae 8A43     		bics	r2, r1
 1645 00b0 1A60     		str	r2, [r3]
 839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         /* Change the DMA state */
 841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 1646              		.loc 1 841 21
 1647 00b2 7B68     		ldr	r3, [r7, #4]
 1648 00b4 2522     		movs	r2, #37
 1649 00b6 0121     		movs	r1, #1
 1650 00b8 9954     		strb	r1, [r3, r2]
 1651              	.L67:
 842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       }
 843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Clear the transfer complete flag */
 844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC1 << (hdma->ChannelIndex & 0x1CU)));
 1652              		.loc 1 844 7
 1653 00ba 7B68     		ldr	r3, [r7, #4]
 1654 00bc 1B68     		ldr	r3, [r3]
 1655 00be 1A00     		movs	r2, r3
 1656 00c0 2E4B     		ldr	r3, .L73
 1657 00c2 9A42     		cmp	r2, r3
 1658 00c4 09D9     		bls	.L68
 1659              		.loc 1 844 7 is_stmt 0 discriminator 1
 1660 00c6 7B68     		ldr	r3, [r7, #4]
 1661 00c8 5B6C     		ldr	r3, [r3, #68]
 1662 00ca 1C22     		movs	r2, #28
 1663 00cc 1A40     		ands	r2, r3
 1664 00ce 2C4B     		ldr	r3, .L73+4
 1665 00d0 0221     		movs	r1, #2
 1666 00d2 9140     		lsls	r1, r1, r2
 1667 00d4 0A00     		movs	r2, r1
 1668 00d6 5A60     		str	r2, [r3, #4]
 1669 00d8 08E0     		b	.L69
 1670              	.L68:
 1671              		.loc 1 844 7 discriminator 2
 1672 00da 7B68     		ldr	r3, [r7, #4]
 1673 00dc 5B6C     		ldr	r3, [r3, #68]
 1674 00de 1C22     		movs	r2, #28
 1675 00e0 1A40     		ands	r2, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 45


 1676 00e2 284B     		ldr	r3, .L73+8
 1677 00e4 0221     		movs	r1, #2
 1678 00e6 9140     		lsls	r1, r1, r2
 1679 00e8 0A00     		movs	r2, r1
 1680 00ea 5A60     		str	r2, [r3, #4]
 1681              	.L69:
 845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Process Unlocked */
 847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 1682              		.loc 1 847 7 is_stmt 1
 1683 00ec 7B68     		ldr	r3, [r7, #4]
 1684 00ee 2422     		movs	r2, #36
 1685 00f0 0021     		movs	r1, #0
 1686 00f2 9954     		strb	r1, [r3, r2]
 848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       if (hdma->XferCpltCallback != NULL)
 1687              		.loc 1 849 15
 1688 00f4 7B68     		ldr	r3, [r7, #4]
 1689 00f6 DB6A     		ldr	r3, [r3, #44]
 1690              		.loc 1 849 10
 1691 00f8 002B     		cmp	r3, #0
 1692 00fa 39D0     		beq	.L65
 850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       {
 851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         /* Transfer complete callback */
 852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferCpltCallback(hdma);
 1693              		.loc 1 852 13
 1694 00fc 7B68     		ldr	r3, [r7, #4]
 1695 00fe DB6A     		ldr	r3, [r3, #44]
 1696              		.loc 1 852 9
 1697 0100 7A68     		ldr	r2, [r7, #4]
 1698 0102 1000     		movs	r0, r2
 1699 0104 9847     		blx	r3
 1700              	.LVL2:
 849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       {
 1701              		.loc 1 849 10
 1702 0106 33E0     		b	.L65
 1703              	.L66:
 853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       }
 854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Transfer Error Interrupt management **************************************/
 857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else if (((flag_it & (DMA_FLAG_TE1 << (hdma->ChannelIndex & 0x1CU))) != 0U) && ((source_it & DMA_
 1704              		.loc 1 857 46
 1705 0108 7B68     		ldr	r3, [r7, #4]
 1706 010a 5B6C     		ldr	r3, [r3, #68]
 1707              		.loc 1 857 61
 1708 010c 1C22     		movs	r2, #28
 1709 010e 1340     		ands	r3, r2
 1710              		.loc 1 857 38
 1711 0110 0822     		movs	r2, #8
 1712 0112 9A40     		lsls	r2, r2, r3
 1713 0114 1300     		movs	r3, r2
 1714              		.loc 1 857 22
 1715 0116 FA68     		ldr	r2, [r7, #12]
 1716 0118 1340     		ands	r3, r2
 1717              		.loc 1 857 11
 1718 011a 2AD0     		beq	.L72
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 46


 1719              		.loc 1 857 94 discriminator 1
 1720 011c BB68     		ldr	r3, [r7, #8]
 1721 011e 0822     		movs	r2, #8
 1722 0120 1340     		ands	r3, r2
 1723              		.loc 1 857 79 discriminator 1
 1724 0122 26D0     		beq	.L72
 858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* When a DMA transfer error occurs */
 860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* A hardware clear of its EN bits is performed */
 861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Disable ALL DMA IT */
 862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 1725              		.loc 1 862 5
 1726 0124 7B68     		ldr	r3, [r7, #4]
 1727 0126 1B68     		ldr	r3, [r3]
 1728 0128 1A68     		ldr	r2, [r3]
 1729 012a 7B68     		ldr	r3, [r7, #4]
 1730 012c 1B68     		ldr	r3, [r3]
 1731 012e 0E21     		movs	r1, #14
 1732 0130 8A43     		bics	r2, r1
 1733 0132 1A60     		str	r2, [r3]
 863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear all flags */
 865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #if defined(DMA2)
 866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex & 0x1CU));
 1734              		.loc 1 866 56
 1735 0134 7B68     		ldr	r3, [r7, #4]
 1736 0136 5B6C     		ldr	r3, [r3, #68]
 1737              		.loc 1 866 71
 1738 0138 1C22     		movs	r2, #28
 1739 013a 1A40     		ands	r2, r3
 1740              		.loc 1 866 9
 1741 013c 7B68     		ldr	r3, [r7, #4]
 1742 013e 1B6C     		ldr	r3, [r3, #64]
 1743              		.loc 1 866 48
 1744 0140 0121     		movs	r1, #1
 1745 0142 9140     		lsls	r1, r1, r2
 1746 0144 0A00     		movs	r2, r1
 1747              		.loc 1 866 32
 1748 0146 5A60     		str	r2, [r3, #4]
 867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #else
 868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_GI1 << (hdma->ChannelIndex & 0x1CU)));
 869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #endif /* DMA2 */
 870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Update error code */
 872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_TE;
 1749              		.loc 1 872 21
 1750 0148 7B68     		ldr	r3, [r7, #4]
 1751 014a 0122     		movs	r2, #1
 1752 014c DA63     		str	r2, [r3, #60]
 873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Change the DMA state */
 875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 1753              		.loc 1 875 17
 1754 014e 7B68     		ldr	r3, [r7, #4]
 1755 0150 2522     		movs	r2, #37
 1756 0152 0121     		movs	r1, #1
 1757 0154 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 47


 876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Process Unlocked */
 878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 1758              		.loc 1 878 5
 1759 0156 7B68     		ldr	r3, [r7, #4]
 1760 0158 2422     		movs	r2, #36
 1761 015a 0021     		movs	r1, #0
 1762 015c 9954     		strb	r1, [r3, r2]
 879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     if (hdma->XferErrorCallback != NULL)
 1763              		.loc 1 880 13
 1764 015e 7B68     		ldr	r3, [r7, #4]
 1765 0160 5B6B     		ldr	r3, [r3, #52]
 1766              		.loc 1 880 8
 1767 0162 002B     		cmp	r3, #0
 1768 0164 05D0     		beq	.L72
 881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       /* Transfer error callback */
 883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       hdma->XferErrorCallback(hdma);
 1769              		.loc 1 883 11
 1770 0166 7B68     		ldr	r3, [r7, #4]
 1771 0168 5B6B     		ldr	r3, [r3, #52]
 1772              		.loc 1 883 7
 1773 016a 7A68     		ldr	r2, [r7, #4]
 1774 016c 1000     		movs	r0, r2
 1775 016e 9847     		blx	r3
 1776              	.LVL3:
 1777              	.L65:
 884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Nothing To Do */
 889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return;
 1778              		.loc 1 890 3 discriminator 1
 1779 0170 C046     		nop
 1780              	.L72:
 1781              		.loc 1 890 3 is_stmt 0
 1782 0172 C046     		nop
 891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 1783              		.loc 1 891 1 is_stmt 1
 1784 0174 BD46     		mov	sp, r7
 1785 0176 04B0     		add	sp, sp, #16
 1786              		@ sp needed
 1787 0178 80BD     		pop	{r7, pc}
 1788              	.L74:
 1789 017a C046     		.align	2
 1790              	.L73:
 1791 017c 80000240 		.word	1073873024
 1792 0180 00040240 		.word	1073873920
 1793 0184 00000240 		.word	1073872896
 1794              		.cfi_endproc
 1795              	.LFE370:
 1797              		.section	.text.HAL_DMA_RegisterCallback,"ax",%progbits
 1798              		.align	1
 1799              		.global	HAL_DMA_RegisterCallback
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 48


 1800              		.syntax unified
 1801              		.code	16
 1802              		.thumb_func
 1804              	HAL_DMA_RegisterCallback:
 1805              	.LFB371:
 892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief Register callbacks
 895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *             the configuration information for the specified DMA Channel.
 897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param CallbackID User Callback identifier
 898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *                   a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
 899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param pCallback Pointer to private callback function which has pointer to
 900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *                  a DMA_HandleTypeDef structure as parameter.
 901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
 902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Callb
 904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 1806              		.loc 1 904 1
 1807              		.cfi_startproc
 1808              		@ args = 0, pretend = 0, frame = 24
 1809              		@ frame_needed = 1, uses_anonymous_args = 0
 1810 0000 80B5     		push	{r7, lr}
 1811              	.LCFI24:
 1812              		.cfi_def_cfa_offset 8
 1813              		.cfi_offset 7, -8
 1814              		.cfi_offset 14, -4
 1815 0002 86B0     		sub	sp, sp, #24
 1816              	.LCFI25:
 1817              		.cfi_def_cfa_offset 32
 1818 0004 00AF     		add	r7, sp, #0
 1819              	.LCFI26:
 1820              		.cfi_def_cfa_register 7
 1821 0006 F860     		str	r0, [r7, #12]
 1822 0008 7A60     		str	r2, [r7, #4]
 1823 000a 0B23     		movs	r3, #11
 1824 000c FB18     		adds	r3, r7, r3
 1825 000e 0A1C     		adds	r2, r1, #0
 1826 0010 1A70     		strb	r2, [r3]
 905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1827              		.loc 1 905 21
 1828 0012 1723     		movs	r3, #23
 1829 0014 FB18     		adds	r3, r7, r3
 1830 0016 0022     		movs	r2, #0
 1831 0018 1A70     		strb	r2, [r3]
 906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Process locked */
 908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1832              		.loc 1 908 3
 1833 001a FB68     		ldr	r3, [r7, #12]
 1834 001c 2422     		movs	r2, #36
 1835 001e 9B5C     		ldrb	r3, [r3, r2]
 1836 0020 012B     		cmp	r3, #1
 1837 0022 01D1     		bne	.L76
 1838              		.loc 1 908 3 is_stmt 0 discriminator 1
 1839 0024 0223     		movs	r3, #2
 1840 0026 37E0     		b	.L77
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 49


 1841              	.L76:
 1842              		.loc 1 908 3 discriminator 2
 1843 0028 FB68     		ldr	r3, [r7, #12]
 1844 002a 2422     		movs	r2, #36
 1845 002c 0121     		movs	r1, #1
 1846 002e 9954     		strb	r1, [r3, r2]
 909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (hdma->State == HAL_DMA_STATE_READY)
 1847              		.loc 1 910 11 is_stmt 1 discriminator 2
 1848 0030 FB68     		ldr	r3, [r7, #12]
 1849 0032 2522     		movs	r2, #37
 1850 0034 9B5C     		ldrb	r3, [r3, r2]
 1851 0036 DBB2     		uxtb	r3, r3
 1852              		.loc 1 910 6 discriminator 2
 1853 0038 012B     		cmp	r3, #1
 1854 003a 22D1     		bne	.L78
 911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     switch (CallbackID)
 1855              		.loc 1 912 5
 1856 003c 0B23     		movs	r3, #11
 1857 003e FB18     		adds	r3, r7, r3
 1858 0040 1B78     		ldrb	r3, [r3]
 1859 0042 032B     		cmp	r3, #3
 1860 0044 14D0     		beq	.L79
 1861 0046 17DC     		bgt	.L80
 1862 0048 022B     		cmp	r3, #2
 1863 004a 0DD0     		beq	.L81
 1864 004c 14DC     		bgt	.L80
 1865 004e 002B     		cmp	r3, #0
 1866 0050 02D0     		beq	.L82
 1867 0052 012B     		cmp	r3, #1
 1868 0054 04D0     		beq	.L83
 1869 0056 0FE0     		b	.L80
 1870              	.L82:
 913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       case  HAL_DMA_XFER_CPLT_CB_ID:
 915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferCpltCallback = pCallback;
 1871              		.loc 1 915 32
 1872 0058 FB68     		ldr	r3, [r7, #12]
 1873 005a 7A68     		ldr	r2, [r7, #4]
 1874 005c DA62     		str	r2, [r3, #44]
 916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 1875              		.loc 1 916 9
 1876 005e 14E0     		b	.L85
 1877              	.L83:
 917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       case  HAL_DMA_XFER_HALFCPLT_CB_ID:
 919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferHalfCpltCallback = pCallback;
 1878              		.loc 1 919 36
 1879 0060 FB68     		ldr	r3, [r7, #12]
 1880 0062 7A68     		ldr	r2, [r7, #4]
 1881 0064 1A63     		str	r2, [r3, #48]
 920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 1882              		.loc 1 920 9
 1883 0066 10E0     		b	.L85
 1884              	.L81:
 921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 50


 922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       case  HAL_DMA_XFER_ERROR_CB_ID:
 923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferErrorCallback = pCallback;
 1885              		.loc 1 923 33
 1886 0068 FB68     		ldr	r3, [r7, #12]
 1887 006a 7A68     		ldr	r2, [r7, #4]
 1888 006c 5A63     		str	r2, [r3, #52]
 924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 1889              		.loc 1 924 9
 1890 006e 0CE0     		b	.L85
 1891              	.L79:
 925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       case  HAL_DMA_XFER_ABORT_CB_ID:
 927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferAbortCallback = pCallback;
 1892              		.loc 1 927 33
 1893 0070 FB68     		ldr	r3, [r7, #12]
 1894 0072 7A68     		ldr	r2, [r7, #4]
 1895 0074 9A63     		str	r2, [r3, #56]
 928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 1896              		.loc 1 928 9
 1897 0076 08E0     		b	.L85
 1898              	.L80:
 929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       default:
 931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         status = HAL_ERROR;
 1899              		.loc 1 931 16
 1900 0078 1723     		movs	r3, #23
 1901 007a FB18     		adds	r3, r7, r3
 1902 007c 0122     		movs	r2, #1
 1903 007e 1A70     		strb	r2, [r3]
 932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 1904              		.loc 1 932 9
 1905 0080 03E0     		b	.L85
 1906              	.L78:
 933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     status = HAL_ERROR;
 1907              		.loc 1 937 12
 1908 0082 1723     		movs	r3, #23
 1909 0084 FB18     		adds	r3, r7, r3
 1910 0086 0122     		movs	r2, #1
 1911 0088 1A70     		strb	r2, [r3]
 1912              	.L85:
 938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Release Lock */
 941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 1913              		.loc 1 941 3
 1914 008a FB68     		ldr	r3, [r7, #12]
 1915 008c 2422     		movs	r2, #36
 1916 008e 0021     		movs	r1, #0
 1917 0090 9954     		strb	r1, [r3, r2]
 942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return status;
 1918              		.loc 1 943 10
 1919 0092 1723     		movs	r3, #23
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 51


 1920 0094 FB18     		adds	r3, r7, r3
 1921 0096 1B78     		ldrb	r3, [r3]
 1922              	.L77:
 944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 1923              		.loc 1 944 1
 1924 0098 1800     		movs	r0, r3
 1925 009a BD46     		mov	sp, r7
 1926 009c 06B0     		add	sp, sp, #24
 1927              		@ sp needed
 1928 009e 80BD     		pop	{r7, pc}
 1929              		.cfi_endproc
 1930              	.LFE371:
 1932              		.section	.text.HAL_DMA_UnRegisterCallback,"ax",%progbits
 1933              		.align	1
 1934              		.global	HAL_DMA_UnRegisterCallback
 1935              		.syntax unified
 1936              		.code	16
 1937              		.thumb_func
 1939              	HAL_DMA_UnRegisterCallback:
 1940              	.LFB372:
 945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
 947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief UnRegister callbacks
 948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
 949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *             the configuration information for the specified DMA Channel.
 950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param CallbackID User Callback identifier
 951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *                   a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
 952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
 953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
 954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_UnRegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Cal
 955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 1941              		.loc 1 955 1
 1942              		.cfi_startproc
 1943              		@ args = 0, pretend = 0, frame = 16
 1944              		@ frame_needed = 1, uses_anonymous_args = 0
 1945 0000 80B5     		push	{r7, lr}
 1946              	.LCFI27:
 1947              		.cfi_def_cfa_offset 8
 1948              		.cfi_offset 7, -8
 1949              		.cfi_offset 14, -4
 1950 0002 84B0     		sub	sp, sp, #16
 1951              	.LCFI28:
 1952              		.cfi_def_cfa_offset 24
 1953 0004 00AF     		add	r7, sp, #0
 1954              	.LCFI29:
 1955              		.cfi_def_cfa_register 7
 1956 0006 7860     		str	r0, [r7, #4]
 1957 0008 0A00     		movs	r2, r1
 1958 000a FB1C     		adds	r3, r7, #3
 1959 000c 1A70     		strb	r2, [r3]
 956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1960              		.loc 1 956 21
 1961 000e 0F23     		movs	r3, #15
 1962 0010 FB18     		adds	r3, r7, r3
 1963 0012 0022     		movs	r2, #0
 1964 0014 1A70     		strb	r2, [r3]
 957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 52


 958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Process locked */
 959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1965              		.loc 1 959 3
 1966 0016 7B68     		ldr	r3, [r7, #4]
 1967 0018 2422     		movs	r2, #36
 1968 001a 9B5C     		ldrb	r3, [r3, r2]
 1969 001c 012B     		cmp	r3, #1
 1970 001e 01D1     		bne	.L87
 1971              		.loc 1 959 3 is_stmt 0 discriminator 1
 1972 0020 0223     		movs	r3, #2
 1973 0022 3FE0     		b	.L88
 1974              	.L87:
 1975              		.loc 1 959 3 discriminator 2
 1976 0024 7B68     		ldr	r3, [r7, #4]
 1977 0026 2422     		movs	r2, #36
 1978 0028 0121     		movs	r1, #1
 1979 002a 9954     		strb	r1, [r3, r2]
 960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (hdma->State == HAL_DMA_STATE_READY)
 1980              		.loc 1 961 11 is_stmt 1 discriminator 2
 1981 002c 7B68     		ldr	r3, [r7, #4]
 1982 002e 2522     		movs	r2, #37
 1983 0030 9B5C     		ldrb	r3, [r3, r2]
 1984 0032 DBB2     		uxtb	r3, r3
 1985              		.loc 1 961 6 discriminator 2
 1986 0034 012B     		cmp	r3, #1
 1987 0036 2AD1     		bne	.L89
 962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     switch (CallbackID)
 1988              		.loc 1 963 5
 1989 0038 FB1C     		adds	r3, r7, #3
 1990 003a 1B78     		ldrb	r3, [r3]
 1991 003c 042B     		cmp	r3, #4
 1992 003e 21D8     		bhi	.L90
 1993 0040 9A00     		lsls	r2, r3, #2
 1994 0042 1A4B     		ldr	r3, .L99
 1995 0044 D318     		adds	r3, r2, r3
 1996 0046 1B68     		ldr	r3, [r3]
 1997 0048 9F46     		mov	pc, r3
 1998              		.section	.rodata.HAL_DMA_UnRegisterCallback,"a",%progbits
 1999              		.align	2
 2000              	.L92:
 2001 0000 4A000000 		.word	.L96
 2002 0004 52000000 		.word	.L95
 2003 0008 5A000000 		.word	.L94
 2004 000c 62000000 		.word	.L93
 2005 0010 6A000000 		.word	.L91
 2006              		.section	.text.HAL_DMA_UnRegisterCallback
 2007              	.L96:
 964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     {
 965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       case  HAL_DMA_XFER_CPLT_CB_ID:
 966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferCpltCallback = NULL;
 2008              		.loc 1 966 32
 2009 004a 7B68     		ldr	r3, [r7, #4]
 2010 004c 0022     		movs	r2, #0
 2011 004e DA62     		str	r2, [r3, #44]
 967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 53


 2012              		.loc 1 967 9
 2013 0050 21E0     		b	.L98
 2014              	.L95:
 968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       case  HAL_DMA_XFER_HALFCPLT_CB_ID:
 970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferHalfCpltCallback = NULL;
 2015              		.loc 1 970 36
 2016 0052 7B68     		ldr	r3, [r7, #4]
 2017 0054 0022     		movs	r2, #0
 2018 0056 1A63     		str	r2, [r3, #48]
 971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 2019              		.loc 1 971 9
 2020 0058 1DE0     		b	.L98
 2021              	.L94:
 972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       case  HAL_DMA_XFER_ERROR_CB_ID:
 974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferErrorCallback = NULL;
 2022              		.loc 1 974 33
 2023 005a 7B68     		ldr	r3, [r7, #4]
 2024 005c 0022     		movs	r2, #0
 2025 005e 5A63     		str	r2, [r3, #52]
 975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 2026              		.loc 1 975 9
 2027 0060 19E0     		b	.L98
 2028              	.L93:
 976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       case  HAL_DMA_XFER_ABORT_CB_ID:
 978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferAbortCallback = NULL;
 2029              		.loc 1 978 33
 2030 0062 7B68     		ldr	r3, [r7, #4]
 2031 0064 0022     		movs	r2, #0
 2032 0066 9A63     		str	r2, [r3, #56]
 979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 2033              		.loc 1 979 9
 2034 0068 15E0     		b	.L98
 2035              	.L91:
 980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       case   HAL_DMA_XFER_ALL_CB_ID:
 982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferCpltCallback = NULL;
 2036              		.loc 1 982 32
 2037 006a 7B68     		ldr	r3, [r7, #4]
 2038 006c 0022     		movs	r2, #0
 2039 006e DA62     		str	r2, [r3, #44]
 983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferHalfCpltCallback = NULL;
 2040              		.loc 1 983 36
 2041 0070 7B68     		ldr	r3, [r7, #4]
 2042 0072 0022     		movs	r2, #0
 2043 0074 1A63     		str	r2, [r3, #48]
 984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferErrorCallback = NULL;
 2044              		.loc 1 984 33
 2045 0076 7B68     		ldr	r3, [r7, #4]
 2046 0078 0022     		movs	r2, #0
 2047 007a 5A63     		str	r2, [r3, #52]
 985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         hdma->XferAbortCallback = NULL;
 2048              		.loc 1 985 33
 2049 007c 7B68     		ldr	r3, [r7, #4]
 2050 007e 0022     		movs	r2, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 54


 2051 0080 9A63     		str	r2, [r3, #56]
 986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 2052              		.loc 1 986 9
 2053 0082 08E0     		b	.L98
 2054              	.L90:
 987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       default:
 989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         status = HAL_ERROR;
 2055              		.loc 1 989 16
 2056 0084 0F23     		movs	r3, #15
 2057 0086 FB18     		adds	r3, r7, r3
 2058 0088 0122     		movs	r2, #1
 2059 008a 1A70     		strb	r2, [r3]
 990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****         break;
 2060              		.loc 1 990 9
 2061 008c 03E0     		b	.L98
 2062              	.L89:
 991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     }
 992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
 994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
 995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     status = HAL_ERROR;
 2063              		.loc 1 995 12
 2064 008e 0F23     		movs	r3, #15
 2065 0090 FB18     		adds	r3, r7, r3
 2066 0092 0122     		movs	r2, #1
 2067 0094 1A70     		strb	r2, [r3]
 2068              	.L98:
 996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Release Lock */
 999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 2069              		.loc 1 999 3
 2070 0096 7B68     		ldr	r3, [r7, #4]
 2071 0098 2422     		movs	r2, #36
 2072 009a 0021     		movs	r1, #0
 2073 009c 9954     		strb	r1, [r3, r2]
1000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return status;
 2074              		.loc 1 1001 10
 2075 009e 0F23     		movs	r3, #15
 2076 00a0 FB18     		adds	r3, r7, r3
 2077 00a2 1B78     		ldrb	r3, [r3]
 2078              	.L88:
1002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 2079              		.loc 1 1002 1
 2080 00a4 1800     		movs	r0, r3
 2081 00a6 BD46     		mov	sp, r7
 2082 00a8 04B0     		add	sp, sp, #16
 2083              		@ sp needed
 2084 00aa 80BD     		pop	{r7, pc}
 2085              	.L100:
 2086              		.align	2
 2087              	.L99:
 2088 00ac 00000000 		.word	.L92
 2089              		.cfi_endproc
 2090              	.LFE372:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 55


 2092              		.section	.text.HAL_DMA_GetState,"ax",%progbits
 2093              		.align	1
 2094              		.global	HAL_DMA_GetState
 2095              		.syntax unified
 2096              		.code	16
 2097              		.thumb_func
 2099              	HAL_DMA_GetState:
 2100              	.LFB373:
1003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
1005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @}
1006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
1007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions_Group3 Peripheral State and Errors functions
1011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *  @brief    Peripheral State and Errors functions
1012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *
1013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** @verbatim
1014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****  ===============================================================================
1015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****             ##### Peripheral State and Errors functions #####
1016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****  ===============================================================================
1017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     [..]
1018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     This subsection provides functions allowing to
1019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       (+) Check the DMA state
1020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****       (+) Get error code
1021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** @endverbatim
1023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @{
1024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
1025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
1027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief Return the DMA handle state.
1028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
1029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *             the configuration information for the specified DMA Channel.
1030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL state
1031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
1032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
1033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 2101              		.loc 1 1033 1
 2102              		.cfi_startproc
 2103              		@ args = 0, pretend = 0, frame = 8
 2104              		@ frame_needed = 1, uses_anonymous_args = 0
 2105 0000 80B5     		push	{r7, lr}
 2106              	.LCFI30:
 2107              		.cfi_def_cfa_offset 8
 2108              		.cfi_offset 7, -8
 2109              		.cfi_offset 14, -4
 2110 0002 82B0     		sub	sp, sp, #8
 2111              	.LCFI31:
 2112              		.cfi_def_cfa_offset 16
 2113 0004 00AF     		add	r7, sp, #0
 2114              	.LCFI32:
 2115              		.cfi_def_cfa_register 7
 2116 0006 7860     		str	r0, [r7, #4]
1034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Return DMA handle state */
1035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return hdma->State;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 56


 2117              		.loc 1 1035 14
 2118 0008 7B68     		ldr	r3, [r7, #4]
 2119 000a 2522     		movs	r2, #37
 2120 000c 9B5C     		ldrb	r3, [r3, r2]
 2121 000e DBB2     		uxtb	r3, r3
1036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 2122              		.loc 1 1036 1
 2123 0010 1800     		movs	r0, r3
 2124 0012 BD46     		mov	sp, r7
 2125 0014 02B0     		add	sp, sp, #8
 2126              		@ sp needed
 2127 0016 80BD     		pop	{r7, pc}
 2128              		.cfi_endproc
 2129              	.LFE373:
 2131              		.section	.text.HAL_DMA_GetError,"ax",%progbits
 2132              		.align	1
 2133              		.global	HAL_DMA_GetError
 2134              		.syntax unified
 2135              		.code	16
 2136              		.thumb_func
 2138              	HAL_DMA_GetError:
 2139              	.LFB374:
1037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
1039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief Return the DMA error code.
1040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
1041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *             the configuration information for the specified DMA Channel.
1042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval DMA Error Code
1043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
1044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
1045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 2140              		.loc 1 1045 1
 2141              		.cfi_startproc
 2142              		@ args = 0, pretend = 0, frame = 8
 2143              		@ frame_needed = 1, uses_anonymous_args = 0
 2144 0000 80B5     		push	{r7, lr}
 2145              	.LCFI33:
 2146              		.cfi_def_cfa_offset 8
 2147              		.cfi_offset 7, -8
 2148              		.cfi_offset 14, -4
 2149 0002 82B0     		sub	sp, sp, #8
 2150              	.LCFI34:
 2151              		.cfi_def_cfa_offset 16
 2152 0004 00AF     		add	r7, sp, #0
 2153              	.LCFI35:
 2154              		.cfi_def_cfa_register 7
 2155 0006 7860     		str	r0, [r7, #4]
1046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Return the DMA error code */
1047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   return hdma->ErrorCode;
 2156              		.loc 1 1047 14
 2157 0008 7B68     		ldr	r3, [r7, #4]
 2158 000a DB6B     		ldr	r3, [r3, #60]
1048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 2159              		.loc 1 1048 1
 2160 000c 1800     		movs	r0, r3
 2161 000e BD46     		mov	sp, r7
 2162 0010 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 57


 2163              		@ sp needed
 2164 0012 80BD     		pop	{r7, pc}
 2165              		.cfi_endproc
 2166              	.LFE374:
 2168              		.section	.text.DMA_SetConfig,"ax",%progbits
 2169              		.align	1
 2170              		.syntax unified
 2171              		.code	16
 2172              		.thumb_func
 2174              	DMA_SetConfig:
 2175              	.LFB375:
1049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
1051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @}
1052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
1053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
1055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @}
1056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
1057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
1059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @{
1060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
1061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
1063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief Sets the DMA Transfer parameter.
1064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
1065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *             the configuration information for the specified DMA Channel.
1066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param SrcAddress The source memory Buffer address
1067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param DstAddress The destination memory Buffer address
1068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param DataLength The length of data to be transferred from source to destination
1069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval HAL status
1070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
1071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
1072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 2176              		.loc 1 1072 1
 2177              		.cfi_startproc
 2178              		@ args = 0, pretend = 0, frame = 16
 2179              		@ frame_needed = 1, uses_anonymous_args = 0
 2180 0000 80B5     		push	{r7, lr}
 2181              	.LCFI36:
 2182              		.cfi_def_cfa_offset 8
 2183              		.cfi_offset 7, -8
 2184              		.cfi_offset 14, -4
 2185 0002 84B0     		sub	sp, sp, #16
 2186              	.LCFI37:
 2187              		.cfi_def_cfa_offset 24
 2188 0004 00AF     		add	r7, sp, #0
 2189              	.LCFI38:
 2190              		.cfi_def_cfa_register 7
 2191 0006 F860     		str	r0, [r7, #12]
 2192 0008 B960     		str	r1, [r7, #8]
 2193 000a 7A60     		str	r2, [r7, #4]
 2194 000c 3B60     		str	r3, [r7]
1073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Clear the DMAMUX synchro overrun flag */
1074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 2195              		.loc 1 1074 7
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 58


 2196 000e FB68     		ldr	r3, [r7, #12]
 2197 0010 DB6C     		ldr	r3, [r3, #76]
 2198              		.loc 1 1074 40
 2199 0012 FA68     		ldr	r2, [r7, #12]
 2200 0014 126D     		ldr	r2, [r2, #80]
 2201              		.loc 1 1074 34
 2202 0016 5A60     		str	r2, [r3, #4]
1075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if (hdma->DMAmuxRequestGen != 0U)
 2203              		.loc 1 1076 11
 2204 0018 FB68     		ldr	r3, [r7, #12]
 2205 001a 5B6D     		ldr	r3, [r3, #84]
 2206              		.loc 1 1076 6
 2207 001c 002B     		cmp	r3, #0
 2208 001e 04D0     		beq	.L106
1077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
1078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Clear the DMAMUX request generator overrun flag */
1079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 2209              		.loc 1 1079 9
 2210 0020 FB68     		ldr	r3, [r7, #12]
 2211 0022 9B6D     		ldr	r3, [r3, #88]
 2212              		.loc 1 1079 47
 2213 0024 FA68     		ldr	r2, [r7, #12]
 2214 0026 D26D     		ldr	r2, [r2, #92]
 2215              		.loc 1 1079 41
 2216 0028 5A60     		str	r2, [r3, #4]
 2217              	.L106:
1080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
1081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Clear all flags */
1083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #if defined(DMA2)
1084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex & 0x1CU));
 2218              		.loc 1 1084 54
 2219 002a FB68     		ldr	r3, [r7, #12]
 2220 002c 5B6C     		ldr	r3, [r3, #68]
 2221              		.loc 1 1084 69
 2222 002e 1C22     		movs	r2, #28
 2223 0030 1A40     		ands	r2, r3
 2224              		.loc 1 1084 7
 2225 0032 FB68     		ldr	r3, [r7, #12]
 2226 0034 1B6C     		ldr	r3, [r3, #64]
 2227              		.loc 1 1084 46
 2228 0036 0121     		movs	r1, #1
 2229 0038 9140     		lsls	r1, r1, r2
 2230 003a 0A00     		movs	r2, r1
 2231              		.loc 1 1084 30
 2232 003c 5A60     		str	r2, [r3, #4]
1085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #else
1086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_GI1 << (hdma->ChannelIndex & 0x1CU)));
1087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #endif /* DMA2 */
1088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Configure DMA Channel data length */
1090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->Instance->CNDTR = DataLength;
 2233              		.loc 1 1090 7
 2234 003e FB68     		ldr	r3, [r7, #12]
 2235 0040 1B68     		ldr	r3, [r3]
 2236              		.loc 1 1090 25
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 59


 2237 0042 3A68     		ldr	r2, [r7]
 2238 0044 5A60     		str	r2, [r3, #4]
1091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Memory to Peripheral */
1093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if ((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 2239              		.loc 1 1093 18
 2240 0046 FB68     		ldr	r3, [r7, #12]
 2241 0048 9B68     		ldr	r3, [r3, #8]
 2242              		.loc 1 1093 6
 2243 004a 102B     		cmp	r3, #16
 2244 004c 08D1     		bne	.L107
1094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
1095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Configure DMA Channel destination address */
1096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->Instance->CPAR = DstAddress;
 2245              		.loc 1 1096 9
 2246 004e FB68     		ldr	r3, [r7, #12]
 2247 0050 1B68     		ldr	r3, [r3]
 2248              		.loc 1 1096 26
 2249 0052 7A68     		ldr	r2, [r7, #4]
 2250 0054 9A60     		str	r2, [r3, #8]
1097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Configure DMA Channel source address */
1099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->Instance->CMAR = SrcAddress;
 2251              		.loc 1 1099 9
 2252 0056 FB68     		ldr	r3, [r7, #12]
 2253 0058 1B68     		ldr	r3, [r3]
 2254              		.loc 1 1099 26
 2255 005a BA68     		ldr	r2, [r7, #8]
 2256 005c DA60     		str	r2, [r3, #12]
1100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
1101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Peripheral to Memory */
1102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
1103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
1104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Configure DMA Channel source address */
1105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->Instance->CPAR = SrcAddress;
1106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Configure DMA Channel destination address */
1108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->Instance->CMAR = DstAddress;
1109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
1110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 2257              		.loc 1 1110 1
 2258 005e 07E0     		b	.L109
 2259              	.L107:
1105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 2260              		.loc 1 1105 9
 2261 0060 FB68     		ldr	r3, [r7, #12]
 2262 0062 1B68     		ldr	r3, [r3]
1105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
 2263              		.loc 1 1105 26
 2264 0064 BA68     		ldr	r2, [r7, #8]
 2265 0066 9A60     		str	r2, [r3, #8]
1108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 2266              		.loc 1 1108 9
 2267 0068 FB68     		ldr	r3, [r7, #12]
 2268 006a 1B68     		ldr	r3, [r3]
1108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
 2269              		.loc 1 1108 26
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 60


 2270 006c 7A68     		ldr	r2, [r7, #4]
 2271 006e DA60     		str	r2, [r3, #12]
 2272              	.L109:
 2273              		.loc 1 1110 1
 2274 0070 C046     		nop
 2275 0072 BD46     		mov	sp, r7
 2276 0074 04B0     		add	sp, sp, #16
 2277              		@ sp needed
 2278 0076 80BD     		pop	{r7, pc}
 2279              		.cfi_endproc
 2280              	.LFE375:
 2282              		.section	.text.DMA_CalcDMAMUXChannelBaseAndMask,"ax",%progbits
 2283              		.align	1
 2284              		.syntax unified
 2285              		.code	16
 2286              		.thumb_func
 2288              	DMA_CalcDMAMUXChannelBaseAndMask:
 2289              	.LFB376:
1111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
1113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief Updates the DMA handle with the DMAMUX  channel and status mask depending on channel num
1114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
1115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *             the configuration information for the specified DMA Channel.
1116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval None
1117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
1118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** static void DMA_CalcDMAMUXChannelBaseAndMask(DMA_HandleTypeDef *hdma)
1119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 2290              		.loc 1 1119 1
 2291              		.cfi_startproc
 2292              		@ args = 0, pretend = 0, frame = 16
 2293              		@ frame_needed = 1, uses_anonymous_args = 0
 2294 0000 80B5     		push	{r7, lr}
 2295              	.LCFI39:
 2296              		.cfi_def_cfa_offset 8
 2297              		.cfi_offset 7, -8
 2298              		.cfi_offset 14, -4
 2299 0002 84B0     		sub	sp, sp, #16
 2300              	.LCFI40:
 2301              		.cfi_def_cfa_offset 24
 2302 0004 00AF     		add	r7, sp, #0
 2303              	.LCFI41:
 2304              		.cfi_def_cfa_register 7
 2305 0006 7860     		str	r0, [r7, #4]
1120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   uint32_t channel_number;
1121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #if defined(DMA2)
1123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* check if instance is not outside the DMA channel range */
1124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   if ((uint32_t)hdma->Instance < (uint32_t)DMA2_Channel1)
 2306              		.loc 1 1124 21
 2307 0008 7B68     		ldr	r3, [r7, #4]
 2308 000a 1B68     		ldr	r3, [r3]
 2309              		.loc 1 1124 7
 2310 000c 1A00     		movs	r2, r3
 2311              		.loc 1 1124 6
 2312 000e 1D4B     		ldr	r3, .L113
 2313 0010 9A42     		cmp	r2, r3
 2314 0012 14D8     		bhi	.L111
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 61


1125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
1126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* DMA1 */
1127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Associate a DMA Channel to a DMAMUX channel */
1128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxChannel = (DMAMUX1_Channel0 + (hdma->ChannelIndex >> 2U));
 2315              		.loc 1 1128 52
 2316 0014 7B68     		ldr	r3, [r7, #4]
 2317 0016 5B6C     		ldr	r3, [r3, #68]
 2318              		.loc 1 1128 67
 2319 0018 9B08     		lsrs	r3, r3, #2
 2320              		.loc 1 1128 45
 2321 001a 9B00     		lsls	r3, r3, #2
 2322 001c 1A4A     		ldr	r2, .L113+4
 2323 001e 9A18     		adds	r2, r3, r2
 2324              		.loc 1 1128 25
 2325 0020 7B68     		ldr	r3, [r7, #4]
 2326 0022 9A64     		str	r2, [r3, #72]
1129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Prepare channel_number used for DMAmuxChannelStatusMask computation */
1131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     channel_number = (((uint32_t)hdma->Instance & 0xFFU) - 8U) / 20U;
 2327              		.loc 1 1131 38
 2328 0024 7B68     		ldr	r3, [r7, #4]
 2329 0026 1B68     		ldr	r3, [r3]
 2330              		.loc 1 1131 24
 2331 0028 1A00     		movs	r2, r3
 2332              		.loc 1 1131 49
 2333 002a FF23     		movs	r3, #255
 2334 002c 1340     		ands	r3, r2
 2335              		.loc 1 1131 58
 2336 002e 083B     		subs	r3, r3, #8
 2337              		.loc 1 1131 20
 2338 0030 1421     		movs	r1, #20
 2339 0032 1800     		movs	r0, r3
 2340 0034 FFF7FEFF 		bl	__aeabi_uidiv
 2341 0038 0300     		movs	r3, r0
 2342 003a FB60     		str	r3, [r7, #12]
 2343 003c 14E0     		b	.L112
 2344              	.L111:
1132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
1133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   else
1134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   {
1135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* DMA2 */
1136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Associate a DMA Channel to a DMAMUX channel */
1137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     hdma->DMAmuxChannel = (DMAMUX1_Channel7 + (hdma->ChannelIndex >> 2U));
 2345              		.loc 1 1137 52
 2346 003e 7B68     		ldr	r3, [r7, #4]
 2347 0040 5B6C     		ldr	r3, [r3, #68]
 2348              		.loc 1 1137 67
 2349 0042 9B08     		lsrs	r3, r3, #2
 2350              		.loc 1 1137 45
 2351 0044 9B00     		lsls	r3, r3, #2
 2352 0046 114A     		ldr	r2, .L113+8
 2353 0048 9A18     		adds	r2, r3, r2
 2354              		.loc 1 1137 25
 2355 004a 7B68     		ldr	r3, [r7, #4]
 2356 004c 9A64     		str	r2, [r3, #72]
1138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     /* Prepare channel_number used for DMAmuxChannelStatusMask computation */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 62


1140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****     channel_number = (((((uint32_t)hdma->Instance & 0xFFU) - 8U) / 20U) + 7U);
 2357              		.loc 1 1140 40
 2358 004e 7B68     		ldr	r3, [r7, #4]
 2359 0050 1B68     		ldr	r3, [r3]
 2360              		.loc 1 1140 26
 2361 0052 1A00     		movs	r2, r3
 2362              		.loc 1 1140 51
 2363 0054 FF23     		movs	r3, #255
 2364 0056 1340     		ands	r3, r2
 2365              		.loc 1 1140 60
 2366 0058 083B     		subs	r3, r3, #8
 2367              		.loc 1 1140 66
 2368 005a 1421     		movs	r1, #20
 2369 005c 1800     		movs	r0, r3
 2370 005e FFF7FEFF 		bl	__aeabi_uidiv
 2371 0062 0300     		movs	r3, r0
 2372              		.loc 1 1140 20
 2373 0064 0733     		adds	r3, r3, #7
 2374 0066 FB60     		str	r3, [r7, #12]
 2375              	.L112:
1141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   }
1142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #else
1143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Associate a DMA Channel to a DMAMUX channel */
1144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)(uint32_t)((uint32_t)DMAMUX1_Channel0 + ((hdma->C
1145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Prepare channel_number used for DMAmuxChannelStatusMask computation */
1147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   channel_number = (((uint32_t)hdma->Instance & 0xFFU) - 8U) / 20U;
1148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** #endif /* DMA2 */
1149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Initialize the field DMAmuxChannelStatus to DMAMUX1_ChannelStatus base */
1151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxChannelStatus = DMAMUX1_ChannelStatus;
 2376              		.loc 1 1151 29
 2377 0068 7B68     		ldr	r3, [r7, #4]
 2378 006a 094A     		ldr	r2, .L113+12
 2379 006c DA64     		str	r2, [r3, #76]
1152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* Initialize the field DMAmuxChannelStatusMask with the corresponding index of the DMAMUX channe
1154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxChannelStatusMask = 1UL << (channel_number & 0x1FU);
 2380              		.loc 1 1154 58
 2381 006e FB68     		ldr	r3, [r7, #12]
 2382 0070 1F22     		movs	r2, #31
 2383 0072 1340     		ands	r3, r2
 2384              		.loc 1 1154 39
 2385 0074 0122     		movs	r2, #1
 2386 0076 9A40     		lsls	r2, r2, r3
 2387              		.loc 1 1154 33
 2388 0078 7B68     		ldr	r3, [r7, #4]
 2389 007a 1A65     		str	r2, [r3, #80]
1155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 2390              		.loc 1 1155 1
 2391 007c C046     		nop
 2392 007e BD46     		mov	sp, r7
 2393 0080 04B0     		add	sp, sp, #16
 2394              		@ sp needed
 2395 0082 80BD     		pop	{r7, pc}
 2396              	.L114:
 2397              		.align	2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 63


 2398              	.L113:
 2399 0084 07040240 		.word	1073873927
 2400 0088 00080240 		.word	1073874944
 2401 008c 1C080240 		.word	1073874972
 2402 0090 80080240 		.word	1073875072
 2403              		.cfi_endproc
 2404              	.LFE376:
 2406              		.section	.text.DMA_CalcDMAMUXRequestGenBaseAndMask,"ax",%progbits
 2407              		.align	1
 2408              		.syntax unified
 2409              		.code	16
 2410              		.thumb_func
 2412              	DMA_CalcDMAMUXRequestGenBaseAndMask:
 2413              	.LFB377:
1156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** /**
1158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @brief Updates the DMA handle with the DMAMUX  request generator params
1159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @param hdma Pointer to a DMA_HandleTypeDef structure that contains
1160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   *             the configuration information for the specified DMA Channel.
1161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   * @retval None
1162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   */
1163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** static void DMA_CalcDMAMUXRequestGenBaseAndMask(DMA_HandleTypeDef *hdma)
1165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** {
 2414              		.loc 1 1165 1
 2415              		.cfi_startproc
 2416              		@ args = 0, pretend = 0, frame = 16
 2417              		@ frame_needed = 1, uses_anonymous_args = 0
 2418 0000 80B5     		push	{r7, lr}
 2419              	.LCFI42:
 2420              		.cfi_def_cfa_offset 8
 2421              		.cfi_offset 7, -8
 2422              		.cfi_offset 14, -4
 2423 0002 84B0     		sub	sp, sp, #16
 2424              	.LCFI43:
 2425              		.cfi_def_cfa_offset 24
 2426 0004 00AF     		add	r7, sp, #0
 2427              	.LCFI44:
 2428              		.cfi_def_cfa_register 7
 2429 0006 7860     		str	r0, [r7, #4]
1166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   uint32_t request =  hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID;
 2430              		.loc 1 1166 33
 2431 0008 7B68     		ldr	r3, [r7, #4]
 2432 000a 5B68     		ldr	r3, [r3, #4]
 2433              		.loc 1 1166 12
 2434 000c 7F22     		movs	r2, #127
 2435 000e 1340     		ands	r3, r2
 2436 0010 FB60     		str	r3, [r7, #12]
1167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* DMA Channels are connected to DMAMUX1 request generator blocks*/
1169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_RequestGener
 2437              		.loc 1 1169 58
 2438 0012 FB68     		ldr	r3, [r7, #12]
 2439 0014 0A4A     		ldr	r2, .L116
 2440 0016 9446     		mov	ip, r2
 2441 0018 6344     		add	r3, r3, ip
 2442 001a 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 64


 2443              		.loc 1 1169 28
 2444 001c 1A00     		movs	r2, r3
 2445              		.loc 1 1169 26
 2446 001e 7B68     		ldr	r3, [r7, #4]
 2447 0020 5A65     		str	r2, [r3, #84]
1170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxRequestGenStatus = DMAMUX1_RequestGenStatus;
 2448              		.loc 1 1171 32
 2449 0022 7B68     		ldr	r3, [r7, #4]
 2450 0024 074A     		ldr	r2, .L116+4
 2451 0026 9A65     		str	r2, [r3, #88]
1172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** 
1173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   /* here "Request" is either DMA_REQUEST_GENERATOR0 to DMA_REQUEST_GENERATOR3, i.e. <= 4*/
1174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c ****   hdma->DMAmuxRequestGenStatusMask = 1UL << ((request - 1U) & 0x3U);
 2452              		.loc 1 1174 55
 2453 0028 FB68     		ldr	r3, [r7, #12]
 2454 002a 013B     		subs	r3, r3, #1
 2455              		.loc 1 1174 61
 2456 002c 0322     		movs	r2, #3
 2457 002e 1340     		ands	r3, r2
 2458              		.loc 1 1174 42
 2459 0030 0122     		movs	r2, #1
 2460 0032 9A40     		lsls	r2, r2, r3
 2461              		.loc 1 1174 36
 2462 0034 7B68     		ldr	r3, [r7, #4]
 2463 0036 DA65     		str	r2, [r3, #92]
1175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c **** }
 2464              		.loc 1 1175 1
 2465 0038 C046     		nop
 2466 003a BD46     		mov	sp, r7
 2467 003c 04B0     		add	sp, sp, #16
 2468              		@ sp needed
 2469 003e 80BD     		pop	{r7, pc}
 2470              	.L117:
 2471              		.align	2
 2472              	.L116:
 2473 0040 3F820010 		.word	268468799
 2474 0044 40090240 		.word	1073875264
 2475              		.cfi_endproc
 2476              	.LFE377:
 2478              		.text
 2479              	.Letext0:
 2480              		.file 2 "c:\\users\\administrator\\documents\\toolstm\\arm\\arm-none-eabi\\include\\machine\\_defa
 2481              		.file 3 "c:\\users\\administrator\\documents\\toolstm\\arm\\arm-none-eabi\\include\\sys\\_stdint.h
 2482              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0b1xx.h"
 2483              		.file 5 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 2484              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 2485              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s 			page 65


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_hal_dma.c
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:18     .rodata.CHANNEL_OFFSET_TAB:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:21     .rodata.CHANNEL_OFFSET_TAB:00000000 CHANNEL_OFFSET_TAB
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:25     .text.HAL_DMA_Init:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:31     .text.HAL_DMA_Init:00000000 HAL_DMA_Init
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:2288   .text.DMA_CalcDMAMUXChannelBaseAndMask:00000000 DMA_CalcDMAMUXChannelBaseAndMask
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:2412   .text.DMA_CalcDMAMUXRequestGenBaseAndMask:00000000 DMA_CalcDMAMUXRequestGenBaseAndMask
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:261    .text.HAL_DMA_Init:00000140 $d
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:271    .text.HAL_DMA_DeInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:277    .text.HAL_DMA_DeInit:00000000 HAL_DMA_DeInit
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:490    .text.HAL_DMA_DeInit:0000011c $d
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:499    .text.HAL_DMA_Start:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:505    .text.HAL_DMA_Start:00000000 HAL_DMA_Start
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:2174   .text.DMA_SetConfig:00000000 DMA_SetConfig
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:619    .text.HAL_DMA_Start_IT:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:625    .text.HAL_DMA_Start_IT:00000000 HAL_DMA_Start_IT
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:820    .text.HAL_DMA_Abort:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:826    .text.HAL_DMA_Abort:00000000 HAL_DMA_Abort
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:975    .text.HAL_DMA_Abort:000000bc $d
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:980    .text.HAL_DMA_Abort_IT:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:986    .text.HAL_DMA_Abort_IT:00000000 HAL_DMA_Abort_IT
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:1145   .text.HAL_DMA_Abort_IT:000000cc $d
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:1150   .text.HAL_DMA_PollForTransfer:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:1156   .text.HAL_DMA_PollForTransfer:00000000 HAL_DMA_PollForTransfer
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:1495   .text.HAL_DMA_IRQHandler:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:1501   .text.HAL_DMA_IRQHandler:00000000 HAL_DMA_IRQHandler
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:1791   .text.HAL_DMA_IRQHandler:0000017c $d
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:1798   .text.HAL_DMA_RegisterCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:1804   .text.HAL_DMA_RegisterCallback:00000000 HAL_DMA_RegisterCallback
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:1933   .text.HAL_DMA_UnRegisterCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:1939   .text.HAL_DMA_UnRegisterCallback:00000000 HAL_DMA_UnRegisterCallback
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:1999   .rodata.HAL_DMA_UnRegisterCallback:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:2088   .text.HAL_DMA_UnRegisterCallback:000000ac $d
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:2093   .text.HAL_DMA_GetState:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:2099   .text.HAL_DMA_GetState:00000000 HAL_DMA_GetState
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:2132   .text.HAL_DMA_GetError:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:2138   .text.HAL_DMA_GetError:00000000 HAL_DMA_GetError
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:2169   .text.DMA_SetConfig:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:2283   .text.DMA_CalcDMAMUXChannelBaseAndMask:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:2399   .text.DMA_CalcDMAMUXChannelBaseAndMask:00000084 $d
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:2407   .text.DMA_CalcDMAMUXRequestGenBaseAndMask:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\cccCguHq.s:2473   .text.DMA_CalcDMAMUXRequestGenBaseAndMask:00000040 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_GetTick
